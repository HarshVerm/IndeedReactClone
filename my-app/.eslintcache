[{"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\index.js":"1","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\reportWebVitals.js":"2","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\App.js":"3","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\store.js":"4","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Utils\\theme.js":"5","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx":"6","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"7","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"8","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"9","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"10","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx":"11","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"12","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx":"13","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"14","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx":"15","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js":"16","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js":"17","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js":"18","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js":"19","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx":"20","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx":"21","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx":"22","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SearchResult.jsx":"23","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js":"24","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js":"25","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js":"26","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js":"27","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js":"28","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx":"29","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx":"30","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js":"31","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js":"32","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx":"33","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js":"34","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx":"35"},{"size":690,"mtime":1609396969447,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1609232024553,"results":"38","hashOfConfig":"37"},{"size":603,"mtime":1609396969386,"results":"39","hashOfConfig":"37"},{"size":548,"mtime":1609497890928,"results":"40","hashOfConfig":"37"},{"size":568,"mtime":1609387143239,"results":"41","hashOfConfig":"37"},{"size":1582,"mtime":1609507629372,"results":"42","hashOfConfig":"37"},{"size":4296,"mtime":1609396969405,"results":"43","hashOfConfig":"37"},{"size":3795,"mtime":1609387143210,"results":"44","hashOfConfig":"37"},{"size":759,"mtime":1609387143204,"results":"45","hashOfConfig":"37"},{"size":2783,"mtime":1609396969390,"results":"46","hashOfConfig":"37"},{"size":1086,"mtime":1609387143222,"results":"47","hashOfConfig":"37"},{"size":8056,"mtime":1609521392850,"results":"48","hashOfConfig":"37"},{"size":5471,"mtime":1609396969408,"results":"49","hashOfConfig":"37"},{"size":1398,"mtime":1609387143212,"results":"50","hashOfConfig":"37"},{"size":2037,"mtime":1609396969388,"results":"51","hashOfConfig":"37"},{"size":1204,"mtime":1609396969439,"results":"52","hashOfConfig":"37"},{"size":748,"mtime":1609498482437,"results":"53","hashOfConfig":"37"},{"size":2544,"mtime":1609396969438,"results":"54","hashOfConfig":"37"},{"size":267,"mtime":1609396969445,"results":"55","hashOfConfig":"37"},{"size":453,"mtime":1609396969442,"results":"56","hashOfConfig":"37"},{"size":14314,"mtime":1609461452814,"results":"57","hashOfConfig":"37"},{"size":14070,"mtime":1609396969412,"results":"58","hashOfConfig":"37"},{"size":713,"mtime":1609396969427,"results":"59","hashOfConfig":"37"},{"size":256,"mtime":1609396969437,"results":"60","hashOfConfig":"37"},{"size":136,"mtime":1609396969429,"results":"61","hashOfConfig":"37"},{"size":1386,"mtime":1609396969430,"results":"62","hashOfConfig":"37"},{"size":1421,"mtime":1609396969434,"results":"63","hashOfConfig":"37"},{"size":154,"mtime":1609396969433,"results":"64","hashOfConfig":"37"},{"size":9852,"mtime":1609542031372,"results":"65","hashOfConfig":"37"},{"size":2026,"mtime":1609541540661,"results":"66","hashOfConfig":"37"},{"size":1367,"mtime":1609521392896,"results":"67","hashOfConfig":"37"},{"size":250,"mtime":1609508659321,"results":"68","hashOfConfig":"37"},{"size":9506,"mtime":1609554276511,"results":"69","hashOfConfig":"37"},{"size":1187,"mtime":1609509233755,"results":"70","hashOfConfig":"37"},{"size":1340,"mtime":1609553971563,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1sskc1k",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\index.js",[],["153","154"],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\reportWebVitals.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\App.js",["155","156"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './Components/Layout/Header/Header';\r\nimport Home from './Components/Layout/Forms/SearchForm/SearchForm';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './Utils/theme';\r\nimport Routes from './Routes/Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Routes />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\store.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Utils\\theme.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx",["157"],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["158","159","160","161","162","163","164"],"import {  Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useState , useRef, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from './Input';\r\nimport InputGrid from './InputGrid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n   \r\n    input:{\r\n        width:'100%',\r\n        height:'45px',\r\n        \r\n    },\r\n    removeMargin:{\r\n        margin:'0'\r\n    },\r\n    searchForm:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    btn_Container:{\r\n        display:'flex',\r\n        alignItems:'flex-end',\r\n        \r\n        '& button':{\r\n            width:'100%',\r\n            height:\"45px\",\r\n            fontSize:'13px',\r\n            fontWeight:'bold',\r\n            borderRadius:'10px'\r\n        }\r\n    },\r\n    suggestionInput:{\r\n        position:'relative'\r\n    },\r\n    autocontainer:{\r\n        border:`1px solid ${theme.palette.primary.main}`,\r\n        width:'99%',\r\n        backgroundColor:\"white\",\r\n        borderBottomLeftRadius:'5px',\r\n        borderBottomRightRadius:'5px',\r\n        zIndex:'10',\r\n        paddingBottom:'30px',\r\n        position:'absolute',\r\n        '& div':{\r\n            marginTop:'30px'\r\n        },\r\n        \r\n    },\r\n  }))\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const classes = useStyles();\r\n    const [job,setJob] = useState('')\r\n    const [location,setLocation] = useState('');\r\n    const [jobOptions,setJobOptions] = useState(['Java Developer','Javascript Developer','React Developer','Government','Account']);\r\n    const [locationOptions,setLocationOptions] = useState(['Bangalore','Mumbai','Delhi','Kolkata','Chennai']);\r\n    const history = useHistory()\r\n    const handelSubmit = (e)=>{\r\n        e.preventDefault();\r\n        history.push(`/jobs/q=${job}&l=${location}`)\r\n    }\r\n    return (\r\n            <form  onSubmit={handelSubmit} className={classes.searchForm}>\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'City, state, or pin code'} classes={classes}\r\n                    options={jobOptions}\r\n                    />\r\n\r\n                    <InputGrid setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes={classes}\r\n                    options={locationOptions} />\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className={classes.btn_Container}>\r\n                        <Button color={'primary'} variant='contained' type='submit'>\r\n                            Find Jobs\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n       \r\n        \r\n    );\r\n}\r\n\r\nexport default SearchForm;","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",["165"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:'#fff',\r\n  },\r\n  toolbar: {\r\n    minHeight: '45px',\r\n    display:'flex',\r\n    alignItems: 'center',\r\n    justifyContent:'space-between'\r\n  },\r\n  logo:{\r\n    height:'20px'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  navigation:{\r\n      width:'350px',\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      marginLeft:'30px'\r\n  },\r\n  header_container:{\r\n      display:'flex',\r\n      alignItems:'center',\r\n      justifyContent:'space-between'\r\n  },\r\n  header_left:{\r\n    display:'flex',\r\n  },\r\n  header_right:{\r\n    display:'flex',\r\n    width:'250px',\r\n    justifyContent:'space-between'\r\n  },\r\n  link:{\r\n        marginLeft:'14px',\r\n        '& a':{\r\n            marginLeft:'20px'\r\n        }\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar elevation={0} color={'secondary'} position=\"static\">\r\n        <Toolbar className={classes.toolbar} >\r\n            <Container className={classes.header_container} disableGutters maxWidth={false}>\r\n                <Box className={classes.header_left}>\r\n                    <img className={classes.logo} src=\"/Images/logo.svg\" alt=\"\"/>\r\n                    <Box className={classes.link} display={{ xs: 'none', sm: 'block', md: 'block' }}>\r\n                        <Typography component={NavLink} variant='h6' to='/' >\r\n                            Find Jobs\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/companies' >\r\n                            Company Reviews\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/carrer/salary' >\r\n                            Find Salary\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box className={classes.header_right} >\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        \r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                        <ForumIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                            <NotificationsIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                            <PersonIcon />\r\n                        </IconButton>\r\n\r\n                        <Typography style={{display:'flex',alignItems:'center'}} component={NavLink} variant='h6' to='/' >\r\n                            Employers/jobs\r\n                        </Typography>\r\n                    \r\n                </Box>\r\n            </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",["166","167","168","169","170"],"import {  Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useState , useRef, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from './Input';\r\n\r\n\r\nfunction InputGrid({label,helperText,classes,setValue,value,options}) {\r\n    return (\r\n        <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Typography variant='h5'>\r\n                {label}\r\n            </Typography>\r\n            <FormHelperText className={classes.removeMargin}>{helperText}</FormHelperText>\r\n            <Input setValue={setValue} value={value} classes={classes} options={options} />            \r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputGrid;","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["171","172"],"import { Box, Container, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\nimport axios from 'axios'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport classNames from 'classnames'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FillterButton from '../Layout/FilterJobsButton/FillterButton';\r\nimport JobDescription from '../Layout/JobDescription';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    jobContainer:{\r\n        width:'450px',\r\n    },\r\n    card:{\r\n        border:'1px solid black',\r\n        padding:'15px',\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            '& $job_title':{\r\n                textDecoration:'underline'\r\n            }\r\n        },\r\n        borderRadius:'10px',\r\n        marginBottom:'20px'\r\n    },\r\n    job_title:{\r\n        fontWeight:'bold',\r\n        fontSize:'20px'\r\n    },\r\n    job_subTitle:{\r\n        fontSize:'16px'\r\n    },\r\n    job_snippet:{\r\n        margin:'20px 0px 10px 0px',\r\n        fontSize:'15px',\r\n        lineHeight:'1.4rem'\r\n    },\r\n    greyText:{\r\n        fontSize:'14px',\r\n        color:'grey'\r\n    },\r\n    job_section:{\r\n        padding:'0 8vw',\r\n        position:'relative'\r\n    },\r\n    sort_container:{\r\n                    display:'flex',\r\n                    justifyContent:\"space-between\",\r\n                    width:\"450px\",\r\n                    fontSize:'14px',\r\n                    margin:'10px 0px'\r\n    },\r\n    sortStyle:{\r\n        color:theme.palette.primary.main,\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            textDecoration:'underline'\r\n        }\r\n    },\r\n    bold:{\r\n        fontWeight:'bolder',\r\n        cursor:'pointer',\r\n    }\r\n}))\r\n\r\nfunction DisplayJobs(props) {\r\n    \r\n    const query = new URLSearchParams(props.location.pathname.split('/')[2]);\r\n    const classes = useStyles()\r\n    let job = query.get('q')\r\n    let location = query.get('l')\r\n    let start = query.get('start')\r\n    \r\n    let [page,setPage] = useState(1)\r\n    let [jobType,setJobType] = useState('') \r\n    let [fromage,setFromage] = useState(0)\r\n    let [sortType,setSortType] = useState('relevance')\r\n\r\n    let [sortDateIsCliked,setSortDateIsCliked] = useState(false)\r\n\r\n    let [jobs,setJobs] = useState([])\r\n\r\n    let [jobData,setJobData] = useState(null)\r\n    let [totalResults,setTotalResults] = useState(0);\r\n    const history = useHistory()\r\n    \r\n    useEffect(()=>{\r\n\r\n    },[page])\r\n    \r\n    const handlePageChange = (event, page) => {\r\n        setPage(page)\r\n        // history.push(`/jobs/q=${job}&l=${location}&start=${(page-1)*15}&jt=${jobType}`)\r\n    };\r\n\r\n\r\n    const handleSort = (sort)=>{\r\n        setSortDateIsCliked(!sortDateIsCliked)\r\n        setSortType(sort)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(`https://cors-anywhere.herokuapp.com/https://api.indeed.com/ads/apisearch`,\r\n        {\r\n            params:{\r\n                publisher:'7778623931867371',\r\n                q:job,\r\n                l:location,\r\n                co:'in',\r\n                limit:15,\r\n                start:(page-1)*15,\r\n                jt:jobType,\r\n                v:2,\r\n                fromage:fromage,\r\n                format:'json',\r\n                sort:sortType\r\n                }\r\n        })\r\n        .then(\r\n            res=>{\r\n                setTotalResults(res.data.totalResults)\r\n                setJobs(res.data.results)\r\n            }\r\n            )\r\n\r\n        // history.push(`/jobs/q=${job}&l=${location}&start=${(page-1)*15}&jt=${jobType}&sort=${sortType}`)\r\n    },[job,location,page,jobType,fromage,sortType])\r\n\r\n    const getJobDescription = (jobKey)=>{\r\n        \r\n        axios\r\n        .get(`https://cors-anywhere.herokuapp.com/https://api.indeed.com/ads/apigetjobs?publisher=7778623931867371&jobkeys=${jobKey}&v=2&format=json`)\r\n        .then(\r\n            res=>{\r\n                setJobData(res.data.results[0])\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Container className={classes.job_section}>\r\n            <Box style={{transform:\"scale(0.8) translateX(-12%)\"}}>\r\n                <SearchForm />\r\n            </Box>\r\n            <Box>\r\n                <FillterButton type={jobType} setType={setJobType} \r\n                typeArr={['Fulltime','Walk-In','Fresher','Part-time']}\r\n                formatDate={false}\r\n                typeStr='JOB TYPE'/>\r\n\r\n                <FillterButton type={fromage} setType={setFromage} \r\n                typeArr={[1,3,7,14]}\r\n                formatDate={true}\r\n                typeStr='DATE POSTED'/>\r\n            \r\n            </Box>\r\n            <Box className={classes.greyText}>\r\n                jobs in {location}\r\n            </Box>\r\n            <Box className={classes.sort_container}>\r\n                <Box>\r\n                    Sort by \r\n                    <span className={classNames({[classes.sortStyle] : sortDateIsCliked , [classes.bold] : !sortDateIsCliked})} onClick={()=>handleSort('relevance')}> relevance </span> \r\n                    / \r\n                    <span className={classNames({[classes.sortStyle] : !sortDateIsCliked , [classes.bold] : sortDateIsCliked})} onClick={()=>handleSort('date')}> date </span>\r\n                </Box>\r\n                <Box>\r\n                    {\r\n                        `Page ${Math.floor(start/15) + 1} of ${totalResults} results`\r\n                    }\r\n                </Box>\r\n              \r\n            </Box>\r\n           \r\n                <Box style={{display:'flex'}}> \r\n                    <Grid className={classes.jobContainer}  container>\r\n                        {\r\n                            jobs.map((job,index)=>\r\n                            <Grid onClick={()=>getJobDescription(job.jobkey)} className={classes.card}  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                                <Typography  className={classes.job_title}>\r\n                                    {job.jobtitle}\r\n                                </Typography>\r\n                                <Typography className={classes.job_subTitle}>\r\n                                    {job.company}\r\n                                </Typography>\r\n                                <Typography className={classes.job_subTitle}>\r\n                                    {job.city}\r\n                                </Typography>\r\n                                <div className={classes.job_snippet} dangerouslySetInnerHTML={{__html: job.snippet}}></div>\r\n                                <Typography className={classes.greyText}>\r\n                                    {job.formattedRelativeTime}\r\n                                </Typography>\r\n                            </Grid>)\r\n                        }\r\n                    </Grid>\r\n                    {\r\n                        jobData ? <JobDescription jobData={jobData} /> : <></> \r\n                    }\r\n                    \r\n                </Box>\r\n                <Pagination onChange={handlePageChange} count={\r\n                    totalResults % 15 === 0 ?\r\n                    Math.floor(totalResults/15) : Math.floor(totalResults/15) + 1 } variant=\"outlined\" shape=\"rounded\" />\r\n                \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DisplayJobs;","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx",["173","174"],"import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles(theme=>({\r\n    container:{\r\n        position:'sticky',\r\n        top:'20px',\r\n        marginLeft:'50px',\r\n        alignSelf: 'flex-start',\r\n        border:'1px solid black',\r\n        padding:'20px',\r\n        flex:'1',\r\n        borderRadius:'10px '\r\n    },\r\n    link:{\r\n        width:'100%',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        height:'53px',\r\n        padding:'0 25px',\r\n        fontSize:'16px',\r\n        borderRadius:'2px',\r\n        backgroundColor:theme.palette.primary.main\r\n    }\r\n})) \r\nfunction JobDescription({jobData}) {\r\n    const classes = useStyles()\r\n    const {company,city,url,snippet,jobTitle} = jobData\r\n    console.log(url)\r\n    return (\r\n        <Box className={classes.container}>\r\n            <Box>\r\n                {jobTitle}\r\n            </Box>\r\n            <Box>\r\n                {company}\r\n            </Box>\r\n            <Box>\r\n                {city}\r\n            </Box>\r\n            <Box>\r\n                ₹ 50,000 - 75,000\r\n            </Box>\r\n            <a className={classes.link} href={url}>\r\n                Apply on Company site\r\n            </a>\r\n            <Box>\r\n                {snippet}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default JobDescription;","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx",["175"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    menu:{\r\n        fontSize:'12px',\r\n        margin:'20px 20px 60px 0px',\r\n        borderRadius:'10px',\r\n        outline:'none',\r\n        border:'1px solid #D4D2D0',\r\n        backgroundColor:'#D4D2D0',\r\n        padding:'10px',\r\n        fontWeight:'bold'\r\n    }\r\n}))\r\n\r\nfunction FillterButton({setType,type,typeStr,typeArr,formatDate}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n      \r\n    };\r\n  \r\n    const handleClose = (type) => {\r\n        setAnchorEl(null);\r\n        if(typeof type === 'string' || typeof type === 'number' )\r\n            setType(type)\r\n    };\r\n    return (\r\n        <>\r\n                <button  className={classes.menu}  onClick={handleClick}>\r\n                    {\r\n                        !type ? typeStr : formatDate ? `Last ${type === 1 ? '24 hours' : `${type} days` }` : type \r\n                        \r\n                    }\r\n                </button>\r\n\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {\r\n                        typeArr.map( (type,index) => <MenuItem key={index} onClick={()=>handleClose(type)}>\r\n                            \r\n                            {formatDate ? `Last ${type === 1 ? '24 hours' : `${type} days` }` : type }\r\n                            \r\n                            </MenuItem>\r\n                            \r\n                         )\r\n                    }\r\n                \r\n                </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FillterButton;","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js",["176","177"],"import { COUNT_TOTAL_RESULT, FETCH_ERROR, FETCH_JOBS_ID_SUCCESS, FETCH_LOADING, FETCH_SUCCESS } from \"./actionTypes\"\r\nimport axios from \"axios\"\r\n\r\nconst fetchSuccess = payload =>{\r\n    return {\r\n        type:FETCH_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst fetchloading = () =>{\r\n    return {\r\n        type:FETCH_LOADING\r\n    }\r\n}\r\n\r\nconst fetchError = () =>{\r\n    return {\r\n        type:FETCH_ERROR\r\n    }\r\n}\r\n\r\nconst  putJobsById=(payload)=>{\r\n    return{\r\n        type:FETCH_JOBS_ID_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst addJobs = payload=>dispatch=>{\r\n\r\n    var config = {\r\n        method: 'post',\r\n        url: 'http://localhost:8000/jobs',\r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        },\r\n        data : payload\r\n    }\r\n\r\n    axios(config)\r\n    .then(res=>(res.data))\r\n    \r\n}\r\n\r\n// const getJobsId = payload=>dispatch=>{\r\n\r\n//     var config = {\r\n//         method: 'get',\r\n//         url: 'http://localhost:8000/jobs',\r\n//         headers: { }\r\n//     };\r\n\r\n//     axios(config)\r\n//     .then(res=>{\r\n//         let jobs = res.data\r\n//         console.log(jobs)\r\n//         for(let i =0 ; i<payload.length;i++)\r\n//         {\r\n            \r\n//             if(!jobs[payload[i].jobkey])\r\n//             {\r\n//                 jobs[payload[i].jobkey] = payload[i]\r\n//             }\r\n//         }\r\n\r\n//         dispatch(addJobs(jobs))\r\n//     })\r\n// }\r\nconst setCount = payload=>{\r\n    return {\r\n        type:COUNT_TOTAL_RESULT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getSearchData = payload =>dispatch=>{\r\n    dispatch(fetchloading())\r\n    const {job ,location,start,jobType,fromage,sortType} = payload\r\n    console.log(job,location,start)\r\n\r\n\r\n    var config = {\r\n        method: 'GET',\r\n        url: `https://cors-anywhere.herokuapp.com/https://api.indeed.com/ads/apisearch`,\r\n        params:{\r\n            publisher:'7778623931867371',\r\n            q:job,\r\n            l:location,\r\n            co:'in',\r\n            limit:15,\r\n            start:start,\r\n            jt:jobType,\r\n            v:2,\r\n            fromage:fromage,\r\n            format:'json',\r\n            sort:sortType\r\n            }\r\n    //   headers: { \r\n    //     'Cookie': 'CTK=1eqmm5d4tocjg800'\r\n    //   }\r\n    };\r\n\r\n    axios(config)\r\n    .then(res=>{\r\n        // console.log(\"data\",res.data.results)\r\n        dispatch(fetchSuccess(res.data.results))\r\n        dispatch(setCount(res.data.totalResults))\r\n        // res.data.results.map(item=>dispatch(addJobs(item)))\r\n\r\n    })\r\n    .catch(err=>dispatch(fetchError()))\r\n\r\n}","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx",["178","179","180","181","182","183","184"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { \r\n    Box, \r\n    Container, \r\n    Grid, \r\n    makeStyles, \r\n    withStyles,\r\n    OutlinedInput, \r\n    Typography,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeLoginRequest } from '../../Redux/Login/actions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeRegisterRequest } from '../../Redux/Register/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \r\n    },\r\n    boxImg: {\r\n        width: \"450px\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        justifyContent: \"center\",\r\n        margin: \"60px 0 30px\"\r\n    },\r\n    imgLogo: {\r\n        height: \"30px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    boxForm: {\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"450px\",\r\n        padding: \"20px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"1px solid #cccccc\",\r\n        height: \"48px\",\r\n        width: \"450px\",\r\n        margin: \"7px 0\",\r\n    },\r\n    h5: {\r\n        fontWeight: \"600\"\r\n    },\r\n    formhelperText: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n        color: \"#4b4b4b\"\r\n    },\r\n    checkbox: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    button: {\r\n        width: \"450px\",\r\n        borderRadius: \"20px\",\r\n        height: \"40px\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"150px\",\r\n        margin: \"0 30px\"\r\n    },\r\n    pageBreak: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"440px\",\r\n        margin: \"30px 30px 20px\"\r\n    }\r\n}))\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#085ff7\",\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SignInButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n      backgroundColor: \"#085ff7\",\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        backgroundColor: \"#0542ac\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nconst HelperButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ffffff\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n        backgroundColor: \"#eeeeee\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nexport function Register() {\r\n    const isAuth = useSelector(state=>state.login.isAuth)\r\n    const classes = useStyles();\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeRegisterRequest({email,password}))\r\n    }\r\n\r\n\r\n    return (\r\n        !isAuth ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            <Box className = {classes.boxImg}>\r\n                <img\r\n                    className = {classes.imgLogo}\r\n                    src = \"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 320 80' focusable='false'%3E%3Cpath d='M287.31 13.4a5.24 5.24 0 0 0-4.22-1.76 5 5 0 0 0-4.22 1.92 9 9 0 0 0-1.49 5.59V37a24.49 24.49 0 0 0-7-5.52 16.88 16.88 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24A18.43 18.43 0 0 0 247.06 36c-3.67 4.23-5.51 10.09-5.51 17.65A33.74 33.74 0 0 0 243 63.6a24 24 0 0 0 4.06 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.14 19.14 0 0 0 3.75-.35 14.73 14.73 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 30.13 30.13 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.66 5.66 0 0 0 8.21.08 7.48 7.48 0 0 0 1.8-5.17V18.48a7.76 7.76 0 0 0-1.72-5.08zm-12.15 49.22a11.56 11.56 0 0 1-4.18 5 10.7 10.7 0 0 1-5.78 1.64 10.45 10.45 0 0 1-5.78-1.72 11.84 11.84 0 0 1-4.18-5.16 20.67 20.67 0 0 1-1.52-8.37 20.86 20.86 0 0 1 1.45-8.14 12 12 0 0 1 4-5.4 9.68 9.68 0 0 1 5.94-1.88h.12a9.93 9.93 0 0 1 5.74 1.84 12.56 12.56 0 0 1 4.22 5.28 19.89 19.89 0 0 1 1.56 8.29 20.36 20.36 0 0 1-1.59 8.62zm-37.9.51a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66A17.22 17.22 0 0 1 205.6 57h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.59-7.74 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.53 1.75 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33 22.39 22.39 0 0 0 6.48-3.32 16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.17-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4H205.6c.4-4.09 1.57-7.29 3.52-9.36zM189 63.13a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66 17.22 17.22 0 0 1-1.64-7.43h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.58-7.71 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.54 1.72 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33A22.39 22.39 0 0 0 185 74a16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.16-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4h-21.8c.39-4.09 1.56-7.29 3.52-9.36zm-21.65-27.17A5.26 5.26 0 0 0 135 11.8a5 5 0 0 0-4.22 1.92c-1.31 1.52-1.65 3.24-1.65 5.7V37.2a23.57 23.57 0 0 0-6.62-5.57 17.21 17.21 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24 18.38 18.38 0 0 0-14.54 6.34c-3.63 4.23-5.47 10.1-5.47 17.65a35.11 35.11 0 0 0 1.37 9.94 24.13 24.13 0 0 0 4.1 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.72 19.72 0 0 0 3.75-.35 14.67 14.67 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 31.93 31.93 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.62 5.62 0 0 0 8.17.08 7.53 7.53 0 0 0 1.56-5.2V18.68a7.87 7.87 0 0 0-1.65-5.12zm-11.9 49.22a11.37 11.37 0 0 1-4.22 5 10.57 10.57 0 0 1-5.74 1.64 10.44 10.44 0 0 1-5.78-1.72 11.58 11.58 0 0 1-4.18-5.16 20.68 20.68 0 0 1-1.52-8.37 21.64 21.64 0 0 1 1.41-8.14 12.08 12.08 0 0 1 4.06-5.4 9.57 9.57 0 0 1 5.9-1.88h.16a9.72 9.72 0 0 1 5.6 1.88 12.35 12.35 0 0 1 4.26 5.28 20.52 20.52 0 0 1 1.56 8.29 21 21 0 0 1-1.51 8.58zM26 71.27v-28.8c.82.08 1.6.12 2.42.12A20.27 20.27 0 0 0 39 39.65v31.62c0 2.7-.49 4.7-1.71 6a6.16 6.16 0 0 1-4.77 2 6 6 0 0 1-4.69-2c-1.21-1.33-1.84-3.33-1.84-6zm-.12-69C34-.69 43.28-.53 50.23 5.5a11.79 11.79 0 0 1 3.36 4.5c.7 2.27-2.46-.23-2.89-.55a30.92 30.92 0 0 0-7.07-3.6C29.95 1.66 17 9.29 9 21.15A64.11 64.11 0 0 0 1.61 38a9.59 9.59 0 0 1-.7 2.11c-.35.67-.16-1.8-.16-1.88a52 52 0 0 1 1.41-7.36C5.87 17.94 14.08 7.18 25.88 2.25zm10.59 32A9.92 9.92 0 1 1 40.81 21a9.88 9.88 0 0 1-4.34 13.29zm20.87 2.53v1.5a21.48 21.48 0 0 1 6.9-6.13 18.79 18.79 0 0 1 8.65-1.94 17.35 17.35 0 0 1 8.45 2.06 13 13 0 0 1 5.55 5.82 13.56 13.56 0 0 1 1.55 4.78 48.84 48.84 0 0 1 .35 6.48v22.24A7.92 7.92 0 0 1 87.13 77a5.41 5.41 0 0 1-4.27 1.86A5.48 5.48 0 0 1 78.52 77a7.81 7.81 0 0 1-1.62-5.4V51.7c0-4-.59-7-1.68-9.09s-3.3-3.14-6.55-3.14a9.84 9.84 0 0 0-5.82 1.9A11 11 0 0 0 59 46.65c-.58 1.79-.91 5.09-.91 10v14.96c0 2.45-.52 4.23-1.65 5.47a5.68 5.68 0 0 1-4.34 1.82 5.38 5.38 0 0 1-4.29-1.9 7.82 7.82 0 0 1-1.67-5.4V37c0-2.29.5-4 1.51-5.09a5.1 5.1 0 0 1 4.07-1.71 5.41 5.41 0 0 1 2.83.74 5.29 5.29 0 0 1 2.06 2.25 8 8 0 0 1 .74 3.64z' fill='%232164f3' fill-rule='evenodd'/%3E%3C/svg%3E\"\r\n                    alt = \"Indeed\"\r\n                />\r\n            </Box>\r\n            <Box className = {classes.boxForm}>\r\n                <Grid container spacing = {3} >\r\n                    <Grid item>\r\n                        <Typography className = {classes.h5} variant = \"h5\">Sign In</Typography>\r\n                    </Grid>\r\n                    <Grid container item spacing = {3}>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #a6a6a6\"}} className = {classes.button} variant = \"outlined\">\r\n                                Create an Account (it's free)\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid black\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Apple\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #1877f2\", color: \"#1877f2\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Facebook\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style = {{cursor: \"pointer\", color : \"#085ff7\", margin:\"0 115px\"}} variant = \"subtitle2\">New to Indeed? Create an account</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid style = {{margin: \"10px 0\"}} container item>\r\n                        <Grid item>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                        <Grid style = {{lineHeight : \"0px\"}} item> or</Grid>\r\n                        <Grid>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form onSubmit = { handleSubmit }>\r\n                            <FormHelperText className = {classes.formhelperText}>Email Address</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                            <FormHelperText className = {classes.formhelperText}>Password</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                            <FormControlLabel className = {classes.checkbox}\r\n                                control = {<GreenCheckbox  />}\r\n                                label = \"Keep me signed in on this device.\"\r\n                            />\r\n                            <br/>\r\n                            <SignInButton type = \"submit\" className = {classes.button} variant = \"contained\">\r\n                                Create Account\r\n                            </SignInButton>\r\n                        </form>\r\n                    </Grid>\r\n                    <hr className = {classes.pageBreak}></hr>\r\n                </Grid>\r\n                <Typography align = \"center\" variant = \"body2\">\r\n                    By signing in to your account, you agree to Indeed's <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Terms of Service</a><br/>and consent to our <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Cookie Policy</a> and  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Privacy Policy.</a><br/>\r\n                    This site is protected by reCAPTCHA and the  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Google Privacy Policy</a> <br/> and  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Google Terms of Service apply.</a>\r\n                </Typography>\r\n            </Box>\r\n            <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" component={Link} to=\"/login\" style = {{cursor: \"pointer\",color: \"#085ff7\"}}>\r\n                        Have an account? Sign in\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        Forgot Your Password\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography align = \"center\" variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        HelpCentre\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container> : <Redirect to=\"/\" />\r\n    )\r\n}","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx",["185","186","187","188","189","190"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { \r\n    Box, \r\n    Container, \r\n    Grid, \r\n    makeStyles, \r\n    withStyles,\r\n    OutlinedInput, \r\n    Typography,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeLoginRequest } from '../../Redux/Login/actions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        // height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \r\n    },\r\n    boxImg: {\r\n        width: \"450px\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        justifyContent: \"center\",\r\n        margin: \"60px 0 30px\"\r\n    },\r\n    imgLogo: {\r\n        height: \"30px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    boxForm: {\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"450px\",\r\n        padding: \"20px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"1px solid #cccccc\",\r\n        height: \"48px\",\r\n        width: \"450px\",\r\n        margin: \"7px 0\",\r\n    },\r\n    h5: {\r\n        fontWeight: \"600\"\r\n    },\r\n    formhelperText: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n        color: \"#4b4b4b\"\r\n    },\r\n    checkbox: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    button: {\r\n        width: \"450px\",\r\n        borderRadius: \"20px\",\r\n        height: \"40px\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"150px\",\r\n        margin: \"0 30px\"\r\n    },\r\n    pageBreak: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"440px\",\r\n        margin: \"30px 30px 20px\"\r\n    }\r\n}))\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#085ff7\",\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SignInButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n      backgroundColor: \"#085ff7\",\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        backgroundColor: \"#0542ac\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nconst HelperButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ffffff\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n        backgroundColor: \"#eeeeee\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nexport function Login() {\r\n    const isAuth = useSelector(state=>state.login.isAuth)\r\n    const classes = useStyles();\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeLoginRequest({email,password}))\r\n    }\r\n\r\n\r\n    return (\r\n        !isAuth ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            <Box className = {classes.boxImg}>\r\n                <img\r\n                    className = {classes.imgLogo}\r\n                    src = \"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 320 80' focusable='false'%3E%3Cpath d='M287.31 13.4a5.24 5.24 0 0 0-4.22-1.76 5 5 0 0 0-4.22 1.92 9 9 0 0 0-1.49 5.59V37a24.49 24.49 0 0 0-7-5.52 16.88 16.88 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24A18.43 18.43 0 0 0 247.06 36c-3.67 4.23-5.51 10.09-5.51 17.65A33.74 33.74 0 0 0 243 63.6a24 24 0 0 0 4.06 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.14 19.14 0 0 0 3.75-.35 14.73 14.73 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 30.13 30.13 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.66 5.66 0 0 0 8.21.08 7.48 7.48 0 0 0 1.8-5.17V18.48a7.76 7.76 0 0 0-1.72-5.08zm-12.15 49.22a11.56 11.56 0 0 1-4.18 5 10.7 10.7 0 0 1-5.78 1.64 10.45 10.45 0 0 1-5.78-1.72 11.84 11.84 0 0 1-4.18-5.16 20.67 20.67 0 0 1-1.52-8.37 20.86 20.86 0 0 1 1.45-8.14 12 12 0 0 1 4-5.4 9.68 9.68 0 0 1 5.94-1.88h.12a9.93 9.93 0 0 1 5.74 1.84 12.56 12.56 0 0 1 4.22 5.28 19.89 19.89 0 0 1 1.56 8.29 20.36 20.36 0 0 1-1.59 8.62zm-37.9.51a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66A17.22 17.22 0 0 1 205.6 57h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.59-7.74 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.53 1.75 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33 22.39 22.39 0 0 0 6.48-3.32 16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.17-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4H205.6c.4-4.09 1.57-7.29 3.52-9.36zM189 63.13a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66 17.22 17.22 0 0 1-1.64-7.43h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.58-7.71 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.54 1.72 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33A22.39 22.39 0 0 0 185 74a16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.16-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4h-21.8c.39-4.09 1.56-7.29 3.52-9.36zm-21.65-27.17A5.26 5.26 0 0 0 135 11.8a5 5 0 0 0-4.22 1.92c-1.31 1.52-1.65 3.24-1.65 5.7V37.2a23.57 23.57 0 0 0-6.62-5.57 17.21 17.21 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24 18.38 18.38 0 0 0-14.54 6.34c-3.63 4.23-5.47 10.1-5.47 17.65a35.11 35.11 0 0 0 1.37 9.94 24.13 24.13 0 0 0 4.1 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.72 19.72 0 0 0 3.75-.35 14.67 14.67 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 31.93 31.93 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.62 5.62 0 0 0 8.17.08 7.53 7.53 0 0 0 1.56-5.2V18.68a7.87 7.87 0 0 0-1.65-5.12zm-11.9 49.22a11.37 11.37 0 0 1-4.22 5 10.57 10.57 0 0 1-5.74 1.64 10.44 10.44 0 0 1-5.78-1.72 11.58 11.58 0 0 1-4.18-5.16 20.68 20.68 0 0 1-1.52-8.37 21.64 21.64 0 0 1 1.41-8.14 12.08 12.08 0 0 1 4.06-5.4 9.57 9.57 0 0 1 5.9-1.88h.16a9.72 9.72 0 0 1 5.6 1.88 12.35 12.35 0 0 1 4.26 5.28 20.52 20.52 0 0 1 1.56 8.29 21 21 0 0 1-1.51 8.58zM26 71.27v-28.8c.82.08 1.6.12 2.42.12A20.27 20.27 0 0 0 39 39.65v31.62c0 2.7-.49 4.7-1.71 6a6.16 6.16 0 0 1-4.77 2 6 6 0 0 1-4.69-2c-1.21-1.33-1.84-3.33-1.84-6zm-.12-69C34-.69 43.28-.53 50.23 5.5a11.79 11.79 0 0 1 3.36 4.5c.7 2.27-2.46-.23-2.89-.55a30.92 30.92 0 0 0-7.07-3.6C29.95 1.66 17 9.29 9 21.15A64.11 64.11 0 0 0 1.61 38a9.59 9.59 0 0 1-.7 2.11c-.35.67-.16-1.8-.16-1.88a52 52 0 0 1 1.41-7.36C5.87 17.94 14.08 7.18 25.88 2.25zm10.59 32A9.92 9.92 0 1 1 40.81 21a9.88 9.88 0 0 1-4.34 13.29zm20.87 2.53v1.5a21.48 21.48 0 0 1 6.9-6.13 18.79 18.79 0 0 1 8.65-1.94 17.35 17.35 0 0 1 8.45 2.06 13 13 0 0 1 5.55 5.82 13.56 13.56 0 0 1 1.55 4.78 48.84 48.84 0 0 1 .35 6.48v22.24A7.92 7.92 0 0 1 87.13 77a5.41 5.41 0 0 1-4.27 1.86A5.48 5.48 0 0 1 78.52 77a7.81 7.81 0 0 1-1.62-5.4V51.7c0-4-.59-7-1.68-9.09s-3.3-3.14-6.55-3.14a9.84 9.84 0 0 0-5.82 1.9A11 11 0 0 0 59 46.65c-.58 1.79-.91 5.09-.91 10v14.96c0 2.45-.52 4.23-1.65 5.47a5.68 5.68 0 0 1-4.34 1.82 5.38 5.38 0 0 1-4.29-1.9 7.82 7.82 0 0 1-1.67-5.4V37c0-2.29.5-4 1.51-5.09a5.1 5.1 0 0 1 4.07-1.71 5.41 5.41 0 0 1 2.83.74 5.29 5.29 0 0 1 2.06 2.25 8 8 0 0 1 .74 3.64z' fill='%232164f3' fill-rule='evenodd'/%3E%3C/svg%3E\"\r\n                    alt = \"Indeed\"\r\n                />\r\n            </Box>\r\n            <Box className = {classes.boxForm}>\r\n                <Grid container spacing = {3} >\r\n                    <Grid item>\r\n                        <Typography className = {classes.h5} variant = \"h5\">Sign In</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form onSubmit = { handleSubmit }>\r\n                            <FormHelperText className = {classes.formhelperText}>Email Address</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                            <FormHelperText className = {classes.formhelperText}>Password</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                            <FormControlLabel className = {classes.checkbox}\r\n                                control = {<GreenCheckbox  />}\r\n                                label = \"Keep me signed in on this device.\"\r\n                            />\r\n                            <br/>\r\n                            <SignInButton type = \"submit\" className = {classes.button} variant = \"contained\">\r\n                                Sign In\r\n                            </SignInButton>\r\n                        </form>\r\n                    </Grid>\r\n                    <Grid style = {{margin: \"10px 0\"}} container item>\r\n                        <Grid item>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                        <Grid style = {{lineHeight : \"0px\"}} item> or</Grid>\r\n                        <Grid>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item spacing = {3}>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #a6a6a6\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Google\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid black\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Apple\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #1877f2\", color: \"#1877f2\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Facebook\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style = {{cursor: \"pointer\", color : \"#085ff7\", margin:\"0 115px\"}} variant = \"subtitle2\" component={Link} to=\"/register\">\r\n                                New to Indeed? Create an account\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <hr className = {classes.pageBreak}></hr>\r\n                </Grid>\r\n                <Typography align = \"center\" variant = \"body2\">\r\n                    By signing in to your account, you agree to Indeed's <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Terms of Service</a><br/>and consent to our <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Cookie Policy</a> and  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Privacy Policy.</a><br/>\r\n                    This site is protected by reCAPTCHA and the  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Google Privacy Policy</a> <br/> and  <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Google Terms of Service apply.</a>\r\n                </Typography>\r\n            </Box>\r\n            <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        Forgot Your Password\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography align = \"center\" variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        HelpCentre\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container> : <Redirect to=\"/\" />\r\n    )\r\n}","D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SearchResult.jsx",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx",["191","192"],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx",["193"],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx",["194"],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js",[],"D:\\PROJECTS\\indeed-clone\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":12},{"ruleId":"199","severity":1,"message":"203","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":12},{"ruleId":"199","severity":1,"message":"204","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":22},{"ruleId":"199","severity":1,"message":"205","line":1,"column":25,"nodeType":"201","messageId":"202","endLine":1,"endColumn":35},{"ruleId":"199","severity":1,"message":"206","line":2,"column":28,"nodeType":"201","messageId":"202","endLine":2,"endColumn":34},{"ruleId":"199","severity":1,"message":"207","line":2,"column":36,"nodeType":"201","messageId":"202","endLine":2,"endColumn":45},{"ruleId":"199","severity":1,"message":"208","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"199","severity":1,"message":"209","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":13},{"ruleId":"199","severity":1,"message":"210","line":60,"column":23,"nodeType":"201","messageId":"202","endLine":60,"endColumn":36},{"ruleId":"199","severity":1,"message":"211","line":61,"column":28,"nodeType":"201","messageId":"202","endLine":61,"endColumn":46},{"ruleId":"199","severity":1,"message":"212","line":8,"column":10,"nodeType":"201","messageId":"202","endLine":8,"endColumn":14},{"ruleId":"199","severity":1,"message":"213","line":1,"column":11,"nodeType":"201","messageId":"202","endLine":1,"endColumn":17},{"ruleId":"199","severity":1,"message":"214","line":2,"column":17,"nodeType":"201","messageId":"202","endLine":2,"endColumn":25},{"ruleId":"199","severity":1,"message":"206","line":2,"column":28,"nodeType":"201","messageId":"202","endLine":2,"endColumn":34},{"ruleId":"199","severity":1,"message":"207","line":2,"column":36,"nodeType":"201","messageId":"202","endLine":2,"endColumn":45},{"ruleId":"199","severity":1,"message":"215","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":20},{"ruleId":"199","severity":1,"message":"216","line":3,"column":22,"nodeType":"201","messageId":"202","endLine":3,"endColumn":31},{"ruleId":"199","severity":1,"message":"217","line":88,"column":11,"nodeType":"201","messageId":"202","endLine":88,"endColumn":18},{"ruleId":"199","severity":1,"message":"213","line":1,"column":15,"nodeType":"201","messageId":"202","endLine":1,"endColumn":21},{"ruleId":"199","severity":1,"message":"218","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":18},{"ruleId":"199","severity":1,"message":"213","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"219","line":24,"column":8,"nodeType":"201","messageId":"202","endLine":24,"endColumn":19},{"ruleId":"199","severity":1,"message":"220","line":31,"column":7,"nodeType":"201","messageId":"202","endLine":31,"endColumn":14},{"ruleId":"199","severity":1,"message":"221","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"222","line":18,"column":10,"nodeType":"201","messageId":"202","endLine":18,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":195,"column":74,"nodeType":"225","endLine":195,"endColumn":140},{"ruleId":"223","severity":1,"message":"224","line":195,"column":184,"nodeType":"225","endLine":195,"endColumn":250},{"ruleId":"223","severity":1,"message":"224","line":195,"column":273,"nodeType":"225","endLine":195,"endColumn":339},{"ruleId":"223","severity":1,"message":"224","line":196,"column":66,"nodeType":"225","endLine":196,"endColumn":132},{"ruleId":"223","severity":1,"message":"224","line":196,"column":169,"nodeType":"225","endLine":196,"endColumn":235},{"ruleId":"199","severity":1,"message":"221","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":196,"column":74,"nodeType":"225","endLine":196,"endColumn":140},{"ruleId":"223","severity":1,"message":"224","line":196,"column":184,"nodeType":"225","endLine":196,"endColumn":250},{"ruleId":"223","severity":1,"message":"224","line":196,"column":273,"nodeType":"225","endLine":196,"endColumn":339},{"ruleId":"223","severity":1,"message":"224","line":197,"column":66,"nodeType":"225","endLine":197,"endColumn":132},{"ruleId":"223","severity":1,"message":"224","line":197,"column":169,"nodeType":"225","endLine":197,"endColumn":235},{"ruleId":"199","severity":1,"message":"226","line":10,"column":10,"nodeType":"201","messageId":"202","endLine":10,"endColumn":13},{"ruleId":"199","severity":1,"message":"227","line":15,"column":5,"nodeType":"201","messageId":"202","endLine":15,"endColumn":18},{"ruleId":"199","severity":1,"message":"226","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":63,"column":7,"nodeType":"230","endLine":63,"endColumn":9,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'SearchResult' is defined but never used.","'Typography' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'setJobOptions' is assigned a value but never used.","'setLocationOptions' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","'putJobsById' is assigned a value but never used.","'addJobs' is assigned a value but never used.","'axios' is defined but never used.","'makeLoginRequest' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Box' is defined but never used.","'OutlinedInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},"Update the dependencies array to be: [dispatch, id]",{"range":"237","text":"238"},[1894,1896],"[dispatch, id]"]