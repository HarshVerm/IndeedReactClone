[{"D:\\project\\IndeedReactClone\\my-app\\src\\index.js":"1","D:\\project\\IndeedReactClone\\my-app\\src\\reportWebVitals.js":"2","D:\\project\\IndeedReactClone\\my-app\\src\\App.js":"3","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\store.js":"4","D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\theme.js":"5","D:\\project\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx":"6","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js":"7","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js":"8","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\reducer.js":"9","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"10","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"11","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js":"12","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js":"13","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js":"14","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js":"15","D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js":"16","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js":"17","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js":"18","D:\\project\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx":"19","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"20","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx":"21","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx":"22","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx":"23","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\PostJob.jsx":"24","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx":"25","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SavedJobs.jsx":"26","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SearchResult.jsx":"27","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx":"28","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"29","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx":"30","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx":"31","D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\timeDifference.js":"32","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js":"33","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actions.js":"34","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actions.js":"35","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\action.js":"36","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"37","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js":"38","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Quill.jsx":"39","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx":"40","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx":"41","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\actionType.js":"42","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actionType.js":"43","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx":"44","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actionTypes.js":"45","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js":"46","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx":"47","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"48","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx":"49","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx":"50","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx":"51","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Section.jsx":"52"},{"size":690,"mtime":1609388210000,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1609225083060,"results":"55","hashOfConfig":"54"},{"size":621,"mtime":1609558978504,"results":"56","hashOfConfig":"54"},{"size":628,"mtime":1609568955859,"results":"57","hashOfConfig":"54"},{"size":393,"mtime":1609498378991,"results":"58","hashOfConfig":"54"},{"size":2170,"mtime":1609571852447,"results":"59","hashOfConfig":"54"},{"size":849,"mtime":1609558978528,"results":"60","hashOfConfig":"54"},{"size":1214,"mtime":1609558978536,"results":"61","hashOfConfig":"54"},{"size":720,"mtime":1609498378985,"results":"62","hashOfConfig":"54"},{"size":3655,"mtime":1609498473171,"results":"63","hashOfConfig":"54"},{"size":4388,"mtime":1609558978512,"results":"64","hashOfConfig":"54"},{"size":1187,"mtime":1609568955859,"results":"65","hashOfConfig":"54"},{"size":170,"mtime":1609558978528,"results":"66","hashOfConfig":"54"},{"size":256,"mtime":1609498378986,"results":"67","hashOfConfig":"54"},{"size":154,"mtime":1609498378984,"results":"68","hashOfConfig":"54"},{"size":267,"mtime":1609388209997,"results":"69","hashOfConfig":"54"},{"size":4107,"mtime":1609581384992,"results":"70","hashOfConfig":"54"},{"size":250,"mtime":1609568955858,"results":"71","hashOfConfig":"54"},{"size":453,"mtime":1609498378989,"results":"72","hashOfConfig":"54"},{"size":634,"mtime":1609498378945,"results":"73","hashOfConfig":"54"},{"size":7322,"mtime":1609558978520,"results":"74","hashOfConfig":"54"},{"size":1093,"mtime":1609498378966,"results":"75","hashOfConfig":"54"},{"size":14498,"mtime":1609565985952,"results":"76","hashOfConfig":"54"},{"size":11356,"mtime":1609565985953,"results":"77","hashOfConfig":"54"},{"size":15073,"mtime":1609565985953,"results":"78","hashOfConfig":"54"},{"size":6352,"mtime":1609558978520,"results":"79","hashOfConfig":"54"},{"size":713,"mtime":1609388209982,"results":"80","hashOfConfig":"54"},{"size":3284,"mtime":1609558978520,"results":"81","hashOfConfig":"54"},{"size":12789,"mtime":1609568955857,"results":"82","hashOfConfig":"54"},{"size":9852,"mtime":1609568955856,"results":"83","hashOfConfig":"54"},{"size":9483,"mtime":1609568955857,"results":"84","hashOfConfig":"54"},{"size":1850,"mtime":1609558978536,"results":"85","hashOfConfig":"54"},{"size":1447,"mtime":1609565985954,"results":"86","hashOfConfig":"54"},{"size":798,"mtime":1609558978520,"results":"87","hashOfConfig":"54"},{"size":694,"mtime":1609535024993,"results":"88","hashOfConfig":"54"},{"size":706,"mtime":1609498378982,"results":"89","hashOfConfig":"54"},{"size":2787,"mtime":1609498378943,"results":"90","hashOfConfig":"54"},{"size":1367,"mtime":1609568955858,"results":"91","hashOfConfig":"54"},{"size":340,"mtime":1609558978520,"results":"92","hashOfConfig":"54"},{"size":2838,"mtime":1609558978512,"results":"93","hashOfConfig":"54"},{"size":1340,"mtime":1609568955799,"results":"94","hashOfConfig":"54"},{"size":159,"mtime":1609498378983,"results":"95","hashOfConfig":"54"},{"size":154,"mtime":1609498473194,"results":"96","hashOfConfig":"54"},{"size":802,"mtime":1609558978512,"results":"97","hashOfConfig":"54"},{"size":160,"mtime":1609558978520,"results":"98","hashOfConfig":"54"},{"size":1470,"mtime":1609558978528,"results":"99","hashOfConfig":"54"},{"size":4567,"mtime":1609558978520,"results":"100","hashOfConfig":"54"},{"size":3269,"mtime":1609558978520,"results":"101","hashOfConfig":"54"},{"size":2390,"mtime":1609558978504,"results":"102","hashOfConfig":"54"},{"size":2026,"mtime":1609568955798,"results":"103","hashOfConfig":"54"},{"size":5984,"mtime":1609558978520,"results":"104","hashOfConfig":"54"},{"size":2290,"mtime":1609558978520,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1q329ea",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"108"},"D:\\project\\IndeedReactClone\\my-app\\src\\index.js",[],["231","232"],"D:\\project\\IndeedReactClone\\my-app\\src\\reportWebVitals.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\App.js",["233"],"import Header from './Components/Layout/Header/Header';\r\nimport Home from './Components/Layout/Forms/SearchForm/SearchForm';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './Utils/theme';\r\nimport Routes from './Routes/Routes';\r\nimport { useSelector } from 'react-redux';\r\nimport './App.css'    \r\n\r\nfunction App() {\r\n  const isAuth = useSelector(state=>state.login.isAuth)\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n       {\r\n         isAuth ? <Header /> : <></>\r\n       } \r\n        <Routes />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\store.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\theme.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx",["234"],"import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { CompanyReviews } from '../Components/Pages/CompanyReviews';\r\nimport AppliedJobs from '../Components/Pages/AppliedJobs';\r\nimport DisplayJobs from '../Components/Pages/DisplayJobs';\r\nimport Home from '../Components/Pages/Home';\r\nimport { Login } from '../Components/Pages/Login';\r\nimport PostJob from '../Components/Pages/PostJob';\r\nimport { Register } from '../Components/Pages/Register';\r\nimport { Review } from '../Components/Pages/Review';\r\nimport SavedJobs from '../Components/Pages/SavedJobs';\r\nimport { SearchResult } from '../Components/Pages/SearchResult';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction Routes(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                \r\n                <PrivateRoute exact path=\"/\" Component={Home} />\r\n                <PrivateRoute exact  path=\"/postJob\" Component={PostJob}/>\r\n                <PrivateRoute exact  path=\"/savedJobs\" Component={SavedJobs}/>\r\n                <PrivateRoute exact  path=\"/appliedJobs\" Component={AppliedJobs}/>\r\n                <PrivateRoute  path=\"/jobs\" Component={DisplayJobs}/>\r\n                \r\n                <Route path='/login'>\r\n                    <Login/>\r\n                </Route>\r\n                <Route path='/Register' exact>\r\n                    <Register />\r\n                </Route>\r\n                <PrivateRoute exact path=\"/\" Component={Home} />\r\n                <PrivateRoute  path=\"/jobs\" Component={DisplayJobs}/>\r\n                <PrivateRoute  path=\"/companies\" Component={CompanyReviews}/>\r\n                <PrivateRoute path = \"/reviews\" exact render = {(props) => <Review {...props} />} />\r\n                {/* <Route path='/' exact>\r\n                    <Home/>\r\n                </Route>\r\n                <Route  path=\"/jobs\" render={(props)=><DisplayJobs {...props}/>}/>\r\n                <Route path=\"/companies\" exact render={()=><div>Company</div>} />\r\n                <Route path=\"/carrer/salary\" exact render={()=><div>Salary</div>} />   */}\r\n                \r\n            </Switch>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Routes;","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\reducer.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",["235"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport UserMenu from '../Menu/UserMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:'#fff',\r\n  },\r\n  toolbar: {\r\n    minHeight: '45px',\r\n    display:'flex',\r\n    alignItems: 'center',\r\n    justifyContent:'space-between'\r\n  },\r\n  logo:{\r\n    height:'20px'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  navigation:{\r\n      width:'350px',\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      marginLeft:'30px'\r\n  },\r\n  header_container:{\r\n      display:'flex',\r\n      alignItems:'center',\r\n      justifyContent:'space-between'\r\n  },\r\n  header_left:{\r\n    display:'flex',\r\n  },\r\n  header_right:{\r\n    display:'flex',\r\n    width:'250px',\r\n    justifyContent:'space-between'\r\n  },\r\n  link:{\r\n        marginLeft:'14px',\r\n        '& a':{\r\n            marginLeft:'20px'\r\n        }\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar elevation={0} color={'secondary'} position=\"static\">\r\n        <Toolbar className={classes.toolbar} >\r\n            <Container className={classes.header_container} disableGutters maxWidth={false}>\r\n                <Box className={classes.header_left}>\r\n                    <img className={classes.logo} src=\"/Images/logo.svg\" alt=\"\"/>\r\n                    <Box className={classes.link} display={{ xs: 'none', sm: 'block', md: 'block' }}>\r\n                        <Typography component={NavLink} variant='h6' to='/' >\r\n                            Find Jobs\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/companies' >\r\n                            Company Reviews\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/carrer/salary' >\r\n                            Find Salary\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box className={classes.header_right} >\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        \r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                        <ForumIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                            <NotificationsIcon />\r\n                        </IconButton>\r\n\r\n                        \r\n                            <UserMenu/>\r\n                        \r\n\r\n                        <Typography style={{display:'flex',alignItems:'center'}} component={NavLink} variant='h6' to='/postjob' >\r\n                            Employers/jobs\r\n                        </Typography>\r\n                    \r\n                </Box>\r\n            </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["236","237","238"],"import {  Button, Grid} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport {useDispatch} from \"react-redux\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputGrid from './InputGrid';\r\nimport { getSearchData } from '../../../../Redux/Search/actions';\r\nimport { loadData, saveData } from '../../../../Utils/localStorage';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n   \r\n    input:{\r\n        width:'100%',\r\n        height:'45px',\r\n        \r\n    },\r\n    removeMargin:{\r\n        margin:'0'\r\n    },\r\n    searchForm:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    btn_Container:{\r\n        display:'flex',\r\n        alignItems:'flex-end',\r\n        \r\n        '& button':{\r\n            width:'100%',\r\n            height:\"45px\",\r\n            fontSize:'13px',\r\n            fontWeight:'bold',\r\n            borderRadius:'10px'\r\n        }\r\n    },\r\n    suggestionInput:{\r\n        position:'relative'\r\n    },\r\n    autocontainer:{\r\n        border:`1px solid ${theme.palette.primary.main}`,\r\n        width:'99%',\r\n        backgroundColor:\"white\",\r\n        borderBottomLeftRadius:'5px',\r\n        borderBottomRightRadius:'5px',\r\n        zIndex:'10',\r\n        paddingBottom:'30px',\r\n        position:'absolute',\r\n        '& div':{\r\n            marginTop:'30px'\r\n        },\r\n        \r\n    },\r\n  }))\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const classes = useStyles();\r\n    const [job,setJob] = useState('');\r\n    const [location,setLocation] = useState('');\r\n    const [jobOptions,setJobOptions] = useState(['Java Developer','Javascript Developer','React Developer','Government','Account']);\r\n    const [locationOptions,setLocationOptions] = useState(['Bangalore','Mumbai','Delhi','Kolkata','Chennai']);\r\n    const history = useHistory()\r\n\r\n    const handleSearch=e=>{\r\n        \r\n        e.preventDefault()\r\n        \r\n        dispatch(getSearchData(job === \"\"?\"\":job,location=== \"\" ? \"\" : location))\r\n        \r\n        let data = loadData(\"recent\") || []\r\n        let str = job !== \"\" && location !== \"\" ? {category:\"both\" , query: `${job} - ${location}`} : job === \"\" && location !== \"\" ? {category:\"location\", query:`${location}`} : {category:\"job\",query:`${job}`}\r\n\r\n        if(data.length === 4){\r\n            data.reverse()\r\n            if(data.some(item=>item.category===str.category && item.query === item.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                data.shift()\r\n                data.push(str)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            if(data.some(item=>item.category===str.category && item.query===str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                \r\n                data.push(str)\r\n            }\r\n        }\r\n\r\n        saveData(\"recent\",data.reverse())\r\n        history.push(`/jobs?q=${job}&location=${location}&page=1`)\r\n\r\n        // console.log(str,\"str\")\r\n\r\n    }\r\n\r\n\r\n\r\n    // const handelSubmit = (e)=>{\r\n    //     e.preventDefault();\r\n    //     history.push(`/jobs/q=${job}&l=${location}`)\r\n    // }\r\n    return (\r\n            <form  onSubmit={handleSearch} className={classes.searchForm}>\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'City, state, or pin code'} classes={classes}\r\n                    options={job !== \"\" ?jobOptions:null}\r\n                    />\r\n\r\n                    <InputGrid setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes={classes}\r\n                    options={locationOptions} />\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className={classes.btn_Container}>\r\n                        <Button color={'primary'} variant='contained' type='submit'>\r\n                            Find Jobs\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n       \r\n        \r\n    );\r\n}\r\n\r\nexport default SearchForm;","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js",["239","240","241","242"],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx",["243","244","245","246","247"],"import { Box, Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeSaveJobRequest } from '../../Redux/SaveJob/actions';\r\nimport { timeDifference } from '../../Utils/timeDifference';\r\nimport {ApplyModal} from \"../Layout/JobApplyModal/ApplyModal\"\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    applyButton:{\r\n        color:'black',\r\n        width:\"200px\",\r\n        height:'40px',\r\n        borderRadius:'50px',\r\n        border:'2px solid #0145E3',\r\n        marginRight:'2%',\r\n\r\n    },\r\n    updateButton:{\r\n        color:'#0145E3',\r\n        width:\"200px\",\r\n        height:'40px',\r\n        border:'2px solid #909090',\r\n        borderRadius:'50px',\r\n        \r\n    }\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nfunction AppliedJobs(props) {\r\n    const classes = useStyles();\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n   \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n   \r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n  \r\n\r\n    const handleCancel=(key)=>{\r\n        console.log(applied_job)\r\n        delete applied_job[key];\r\n        console.log(applied_job)\r\n        dispatch(makeApplyRequest({user_id:id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        \r\n        <Container style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n\r\n                    <Box>\r\n                        \r\n                            {\r\n                                applied.map((key)=>{\r\n                                    return (\r\n                                        <>\r\n                                        <Box style={{display:'flex'}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {applied_job[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {applied_job[key].companyName} | {applied_job[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Applied { timeDifference(applied_job[key].dateSaved)}\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className={classes.applyButton} onClick={()=>handleOpen(key)} >\r\n                                                    Cancel\r\n                                            </Button>\r\n\r\n                                            </Box>\r\n                                           \r\n                                    </Box>\r\n                                     <Dialog\r\n                                     open={open}\r\n                                     TransitionComponent={Transition}\r\n                                     keepMounted\r\n                                     onClose={handleClose}\r\n                                     aria-labelledby=\"alert-dialog-slide-title\"\r\n                                     aria-describedby=\"alert-dialog-slide-description\"\r\n                                 >\r\n                                     <DialogTitle id=\"alert-dialog-slide-title\">{\"Are you sure you want to cancel the application?\"}</DialogTitle>\r\n                                     <DialogContent>\r\n                                     <DialogContentText id=\"alert-dialog-slide-description\">\r\n                                        \r\n                                     </DialogContentText>\r\n                                     </DialogContent>\r\n                                     <DialogActions>\r\n                                     <Button onClick={()=> handleCancel(key)} color=\"primary\">\r\n                                         Yes\r\n                                     </Button>\r\n                                     <Button onClick={handleClose} color=\"primary\">\r\n                                         No\r\n                                     </Button>\r\n                                     </DialogActions>\r\n                                 </Dialog>\r\n                                 </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                   \r\n                </Box>\r\n           \r\n        \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AppliedJobs;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx",["248"],"import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { \r\n    Box, \r\n    Container, \r\n    Grid, \r\n    makeStyles, \r\n    withStyles,\r\n    OutlinedInput, \r\n    Typography,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeLoginRequest } from '../../Redux/Login/actions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        // height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \r\n    },\r\n    boxImg: {\r\n        width: \"450px\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        justifyContent: \"center\",\r\n        margin: \"60px 0 30px\"\r\n    },\r\n    imgLogo: {\r\n        height: \"30px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    boxForm: {\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"450px\",\r\n        padding: \"20px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"1px solid #cccccc\",\r\n        height: \"48px\",\r\n        width: \"450px\",\r\n        margin: \"7px 0\",\r\n    },\r\n    h5: {\r\n        fontWeight: \"600\"\r\n    },\r\n    formhelperText: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n        color: \"#4b4b4b\"\r\n    },\r\n    checkbox: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    button: {\r\n        width: \"450px\",\r\n        borderRadius: \"20px\",\r\n        height: \"40px\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"150px\",\r\n        margin: \"0 30px\"\r\n    },\r\n    pageBreak: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"440px\",\r\n        margin: \"30px 30px 20px\"\r\n    }\r\n}))\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#085ff7\",\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SignInButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n      backgroundColor: \"#085ff7\",\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        backgroundColor: \"#0542ac\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nconst HelperButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ffffff\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n        backgroundColor: \"#eeeeee\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nexport function Login() {\r\n    \r\n    const {isAuth,isError,errorMsg} = useSelector(state=>state.login)\r\n    const classes = useStyles();\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeLoginRequest({email,password}))\r\n    }\r\n\r\n\r\n    return (\r\n        !isAuth ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            {isError ? <Box>{errorMsg}</Box> : <></>}\r\n            <Box className = {classes.boxImg}>\r\n                <img\r\n                    className = {classes.imgLogo}\r\n                    src = \"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 320 80' focusable='false'%3E%3Cpath d='M287.31 13.4a5.24 5.24 0 0 0-4.22-1.76 5 5 0 0 0-4.22 1.92 9 9 0 0 0-1.49 5.59V37a24.49 24.49 0 0 0-7-5.52 16.88 16.88 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24A18.43 18.43 0 0 0 247.06 36c-3.67 4.23-5.51 10.09-5.51 17.65A33.74 33.74 0 0 0 243 63.6a24 24 0 0 0 4.06 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.14 19.14 0 0 0 3.75-.35 14.73 14.73 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 30.13 30.13 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.66 5.66 0 0 0 8.21.08 7.48 7.48 0 0 0 1.8-5.17V18.48a7.76 7.76 0 0 0-1.72-5.08zm-12.15 49.22a11.56 11.56 0 0 1-4.18 5 10.7 10.7 0 0 1-5.78 1.64 10.45 10.45 0 0 1-5.78-1.72 11.84 11.84 0 0 1-4.18-5.16 20.67 20.67 0 0 1-1.52-8.37 20.86 20.86 0 0 1 1.45-8.14 12 12 0 0 1 4-5.4 9.68 9.68 0 0 1 5.94-1.88h.12a9.93 9.93 0 0 1 5.74 1.84 12.56 12.56 0 0 1 4.22 5.28 19.89 19.89 0 0 1 1.56 8.29 20.36 20.36 0 0 1-1.59 8.62zm-37.9.51a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66A17.22 17.22 0 0 1 205.6 57h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.59-7.74 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.53 1.75 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33 22.39 22.39 0 0 0 6.48-3.32 16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.17-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4H205.6c.4-4.09 1.57-7.29 3.52-9.36zM189 63.13a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66 17.22 17.22 0 0 1-1.64-7.43h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.58-7.71 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.54 1.72 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33A22.39 22.39 0 0 0 185 74a16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.16-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4h-21.8c.39-4.09 1.56-7.29 3.52-9.36zm-21.65-27.17A5.26 5.26 0 0 0 135 11.8a5 5 0 0 0-4.22 1.92c-1.31 1.52-1.65 3.24-1.65 5.7V37.2a23.57 23.57 0 0 0-6.62-5.57 17.21 17.21 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24 18.38 18.38 0 0 0-14.54 6.34c-3.63 4.23-5.47 10.1-5.47 17.65a35.11 35.11 0 0 0 1.37 9.94 24.13 24.13 0 0 0 4.1 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.72 19.72 0 0 0 3.75-.35 14.67 14.67 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 31.93 31.93 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.62 5.62 0 0 0 8.17.08 7.53 7.53 0 0 0 1.56-5.2V18.68a7.87 7.87 0 0 0-1.65-5.12zm-11.9 49.22a11.37 11.37 0 0 1-4.22 5 10.57 10.57 0 0 1-5.74 1.64 10.44 10.44 0 0 1-5.78-1.72 11.58 11.58 0 0 1-4.18-5.16 20.68 20.68 0 0 1-1.52-8.37 21.64 21.64 0 0 1 1.41-8.14 12.08 12.08 0 0 1 4.06-5.4 9.57 9.57 0 0 1 5.9-1.88h.16a9.72 9.72 0 0 1 5.6 1.88 12.35 12.35 0 0 1 4.26 5.28 20.52 20.52 0 0 1 1.56 8.29 21 21 0 0 1-1.51 8.58zM26 71.27v-28.8c.82.08 1.6.12 2.42.12A20.27 20.27 0 0 0 39 39.65v31.62c0 2.7-.49 4.7-1.71 6a6.16 6.16 0 0 1-4.77 2 6 6 0 0 1-4.69-2c-1.21-1.33-1.84-3.33-1.84-6zm-.12-69C34-.69 43.28-.53 50.23 5.5a11.79 11.79 0 0 1 3.36 4.5c.7 2.27-2.46-.23-2.89-.55a30.92 30.92 0 0 0-7.07-3.6C29.95 1.66 17 9.29 9 21.15A64.11 64.11 0 0 0 1.61 38a9.59 9.59 0 0 1-.7 2.11c-.35.67-.16-1.8-.16-1.88a52 52 0 0 1 1.41-7.36C5.87 17.94 14.08 7.18 25.88 2.25zm10.59 32A9.92 9.92 0 1 1 40.81 21a9.88 9.88 0 0 1-4.34 13.29zm20.87 2.53v1.5a21.48 21.48 0 0 1 6.9-6.13 18.79 18.79 0 0 1 8.65-1.94 17.35 17.35 0 0 1 8.45 2.06 13 13 0 0 1 5.55 5.82 13.56 13.56 0 0 1 1.55 4.78 48.84 48.84 0 0 1 .35 6.48v22.24A7.92 7.92 0 0 1 87.13 77a5.41 5.41 0 0 1-4.27 1.86A5.48 5.48 0 0 1 78.52 77a7.81 7.81 0 0 1-1.62-5.4V51.7c0-4-.59-7-1.68-9.09s-3.3-3.14-6.55-3.14a9.84 9.84 0 0 0-5.82 1.9A11 11 0 0 0 59 46.65c-.58 1.79-.91 5.09-.91 10v14.96c0 2.45-.52 4.23-1.65 5.47a5.68 5.68 0 0 1-4.34 1.82 5.38 5.38 0 0 1-4.29-1.9 7.82 7.82 0 0 1-1.67-5.4V37c0-2.29.5-4 1.51-5.09a5.1 5.1 0 0 1 4.07-1.71 5.41 5.41 0 0 1 2.83.74 5.29 5.29 0 0 1 2.06 2.25 8 8 0 0 1 .74 3.64z' fill='%232164f3' fill-rule='evenodd'/%3E%3C/svg%3E\"\r\n                    alt = \"Indeed\"\r\n                />\r\n            </Box>\r\n            <Box className = {classes.boxForm}>\r\n                <Grid container spacing = {3} >\r\n                    <Grid item>\r\n                        <Typography className = {classes.h5} variant = \"h5\">Sign In</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form onSubmit = { handleSubmit }>\r\n                            <FormHelperText className = {classes.formhelperText}>Email Address</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                            <FormHelperText className = {classes.formhelperText}>Password</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                            <FormControlLabel className = {classes.checkbox}\r\n                                control = {<GreenCheckbox  />}\r\n                                label = \"Keep me signed in on this device.\"\r\n                            />\r\n                            <br/>\r\n                            <SignInButton type = \"submit\" className = {classes.button} variant = \"contained\">\r\n                                Sign In\r\n                            </SignInButton>\r\n                        </form>\r\n                    </Grid>\r\n                    <Grid style = {{margin: \"10px 0\"}} container item>\r\n                        <Grid item>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                        <Grid style = {{lineHeight : \"0px\"}} item> or</Grid>\r\n                        <Grid>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item spacing = {3}>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #a6a6a6\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Google\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid black\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Apple\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #1877f2\", color: \"#1877f2\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Facebook\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style = {{cursor: \"pointer\", color : \"#085ff7\", margin:\"0 115px\"}} variant = \"subtitle2\" component={Link} to=\"/register\">\r\n                                New to Indeed? Create an account\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <hr className = {classes.pageBreak}></hr>\r\n                </Grid>\r\n                <Typography align = \"center\" variant = \"body2\">\r\n                    By signing in to your account, you agree to Indeed's \r\n                    <Link to='/' style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">\r\n                        Terms of Service</Link>\r\n                        <br/>\r\n                        and consent to our \r\n                        <Link to='/' style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">\r\n                            Cookie Policy</Link>\r\n                            and  \r\n                        <Link to='/' style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Privacy Policy.</Link><br/>\r\n                    This site is protected by reCAPTCHA and the \r\n                    <Link to='/' style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">\r\n                        Google Privacy Policy</Link> <br/> and  <Link to='/' style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">\r\n                            Google Terms of Service apply.</Link>\r\n                </Typography>\r\n            </Box>\r\n            <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        Forgot Your Password\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography align = \"center\" variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        HelpCentre\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container> : <Redirect to=\"/\" />\r\n    )\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\PostJob.jsx",["249","250"],"import { Container,Grid,OutlinedInput,Typography ,InputAdornment, Button, TextareaAutosize} from '@material-ui/core';\r\nimport {  IconButton, Snackbar } from '@material-ui/core';\r\nimport React, { useReducer, useState } from 'react';\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Quill from '../Layout/Quill';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makePostJobRequest } from '../../Redux/PostJob/action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width:'100%',\r\n        '& > *':{\r\n            marginBottom:'20px'\r\n        }\r\n    },\r\n    select_job_type: {\r\n        width:'100%'\r\n    }\r\n\r\n  }));\r\nfunction PostJob(props) {\r\n    const classes = useStyles();\r\n    \r\n    const [companyName,setCompanyName] = useState(''); \r\n    const [jobTitle,setJobTitle] = useState(''); \r\n    const [location,setLocation] = useState(''); \r\n    const [companyUrl,setCompanyUrl] = useState(''); \r\n    const [jobType,setJobType] = useState('Full-Time'); \r\n    const [occupation,setOccupation] = useState('Software');\r\n\r\n    const [education,setEducation] = useState(\"12th Pass\");\r\n\r\n    const [startSalary,setStartSalary] = useState(''); \r\n    const [endSalary,setEndSalary] = useState('') ;\r\n    const [salaryType,setSalaryType] = useState('Per year') ;\r\n    const [jobDescription,setJobDescription] = useState('')\r\n    const [snippet,setSnippet] = useState('')\r\n    \r\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const handelPost = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        dispatch(makePostJobRequest({\r\n            companyName,\r\n            jobTitle,\r\n            location,\r\n            companyUrl,\r\n            jobType,\r\n            occupation,\r\n            education,\r\n            startSalary,\r\n            endSalary,\r\n            salaryType,\r\n            jobDescription,\r\n            snippet:snippet,\r\n            date:new Date().getTime()\r\n        }))\r\n\r\n        // setCompanyName(''); \r\n        // setJobTitle(''); \r\n        // setLocation(''); \r\n        // setCompanyUrl(''); \r\n        // setJobType('Full-Time'); \r\n        // setOccupation('Software');\r\n\r\n        // setEducation(\"12th Pass\");\r\n\r\n        // setStartSalary(''); \r\n        // setEndSalary('') ;\r\n        // setSalaryType('Per year') ;\r\n        // setJobDescription('')\r\n        // setSnippet('')\r\n\r\n        \r\n        setSnackBarOpen(true)\r\n        \r\n        \r\n    }\r\n    return (\r\n        <Container>\r\n            <Typography variant='h4'>\r\n                Indeed for employers\r\n            </Typography>\r\n            <form onSubmit={handelPost} className={classes.root} style={{width:'100%'}}>\r\n                \r\n                <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                    <label >\r\n                        Company name for this job\r\n                    </label>\r\n                    <OutlinedInput\r\n                    style={{width:'100%'}}\r\n                    className={classes.input}\r\n                    defaultValue={companyName}\r\n                    onChange={(e)=>{setCompanyName(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                    <label >\r\n                        Job Title\r\n                    </label>\r\n                    <OutlinedInput\r\n                    style={{width:'100%'}}\r\n                    className={classes.input}\r\n                    defaultValue = {jobTitle}\r\n                    onChange={(e)=>{setJobTitle(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                    <label >\r\n                        Location\r\n                    </label>\r\n                    <OutlinedInput\r\n                    style={{width:'100%'}}\r\n                    className={classes.input }\r\n                    defaultValue={location}\r\n                    onChange={(e)=>{setLocation(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                    <label >\r\n                        Company website\r\n                    </label>\r\n                    <OutlinedInput\r\n                    style={{width:'100%'}}\r\n                    className={classes.input }\r\n                    defaultValue={companyUrl}\r\n                    onChange={(e)=>{setCompanyUrl(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                    <label >\r\n                        Job Summary\r\n                    </label>\r\n                    \r\n                    <TextareaAutosize value={snippet} onChange={(e)=>setSnippet(e.target.value)} aria-label=\"minimum height\" rowsMin={6} style={{width:\"100%\",fontSize:'20px'}}  placeholder=\"\" />\r\n\r\n                </Grid>\r\n                \r\n            \r\n\r\n\r\n            <Grid spacing={2} item container lg={12} md={12} sm={12} xs={12}>\r\n                <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                    <FormControl variant=\"outlined\" className={classes.select_job_type}>\r\n                        <label>\r\n                            Job Type\r\n                        </label>\r\n                        <Select defaultValue={jobType} native={true} onChange={(e)=>setJobType(e.target.value)}>\r\n                            <option value={'Full-Time'}>\r\n                                Full_Time\r\n                            </option>\r\n                            <option value={'Part-Time'}>\r\n                                Part_time\r\n                            </option>\r\n                            <option value={'Contract'}>\r\n                                Contract\r\n                            </option>\r\n                            <option value={'Fresher'}>\r\n                                Fresher\r\n                            </option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                    <FormControl variant=\"outlined\" className={classes.select_job_type}>\r\n                        <label>\r\n                            Occupation\r\n                        </label>\r\n                        <Select\r\n                        native={true}\r\n                        defaultValue={occupation}\r\n                        onChange={e => setOccupation (e.target.value)}\r\n                        \r\n                        >\r\n                        \r\n                        <option value={'Software'}>Software</option>\r\n                        <option value={'Government'}>Government</option>\r\n                        <option value={'Account'}>Account</option>\r\n                        <option value={'Executive and personal assitansts'}>Executive and personal assitansts</option>\r\n                        \r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                    <FormControl variant=\"outlined\" className={classes.select_job_type}>\r\n                        <label>\r\n                            Education Level\r\n                        </label>\r\n                        <Select\r\n                        defaultValue={education}\r\n                        native={true}\r\n                        onChange={(e)=>{setEducation(e.target.value)}}\r\n                        >\r\n                            \r\n                            <option value={'12th pass'}>12th pass</option>\r\n                            <option value={'Diploma'}>Diploma</option>\r\n                            <option value={\"Bachelor's degree\"}>Bachelor's degree</option>\r\n                            <option value={\"Master's degree\"}>Master's degree</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item container spacing={1} lg={12} md={12} sm={12} xs={12}>\r\n                <Grid item container lg={12} md={12} sm={12} xs={12}>\r\n                    <label>Salary</label>\r\n                </Grid>\r\n\r\n                <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                    <OutlinedInput\r\n                    startAdornment={<InputAdornment position=\"start\"> Rs </InputAdornment>}\r\n                    style={{width:'100%'}}\r\n                    className={classes.input }\r\n                    value={startSalary}\r\n                    onChange={(e)=>setStartSalary(e.target.value)}\r\n                    /> \r\n                </Grid>\r\n                <Grid item lg={1} md={1} sm={1} xs={1}>\r\n                    <Typography variant='h5'>\r\n                        to\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item lg={3} md={3} sm={3} xs={3}>\r\n                    <OutlinedInput\r\n                    style={{width:'100%'}}\r\n                    className={classes.input }\r\n                    value={endSalary}\r\n                    onChange={(e)=>setEndSalary(e.target.value)}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                    <FormControl variant=\"outlined\" className={classes.select_job_type}>\r\n                        <Select\r\n                            defaultValue={salaryType}\r\n                            native={true}\r\n                            onChange={(e)=>setSalaryType(e.target.value)}\r\n                        >   \r\n                        \r\n                        <option value={'Per Hour'}>Per Hour</option>\r\n                        <option value={'Per Day'}>Per month</option>\r\n                        <option value={'Per Month'}>Per day</option>\r\n                        <option value={'Per year'}>Per year</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <label>\r\n                Description\r\n            </label>\r\n            <Quill jobDescription={jobDescription} setJobDescription={setJobDescription} />\r\n            <Button variant=\"contained\" color='primary' type='submit'>\r\n                Submit\r\n            </Button>\r\n            </form>\r\n           \r\n\r\n                <Snackbar\r\n                anchorOrigin={{vertical:'top',horizontal:'left'}}\r\n                open={snackBarOpen}\r\n                autoHideDuration={3000}\r\n                message={<span className=\"format__id\">Job Successfully posted</span>}\r\n                ContentProps={{\r\n                    'aria-describedby':'message-id'\r\n                }}\r\n                onClose={()=>setSnackBarOpen(false)}\r\n                action={[\r\n                    <IconButton\r\n                    onClick={()=>{setSnackBarOpen(false)}}\r\n                    color=\"inherit\"\r\n                    key=\"close\"\r\n                    aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                ]}\r\n/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PostJob;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx",["251","252","253","254"],"import React, { useState } from 'react';\r\nimport { Container,Grid,OutlinedInput,Typography , Button} from '@material-ui/core';\r\nimport {  IconButton, Snackbar } from '@material-ui/core';\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { \r\n    Box, \r\n    makeStyles, \r\n    withStyles,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeRegisterRequest } from '../../Redux/Register/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \r\n    },\r\n    boxImg: {\r\n        width: \"450px\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        justifyContent: \"center\",\r\n        margin: \"60px 0 30px\"\r\n    },\r\n    imgLogo: {\r\n        height: \"30px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    boxForm: {\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"450px\",\r\n        padding: \"20px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"1px solid #cccccc\",\r\n        height: \"48px\",\r\n        width: \"450px\",\r\n        margin: \"7px 0\",\r\n    },\r\n    h5: {\r\n        fontWeight: \"600\"\r\n    },\r\n    formhelperText: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n        color: \"#4b4b4b\"\r\n    },\r\n    checkbox: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    button: {\r\n        width: \"450px\",\r\n        borderRadius: \"20px\",\r\n        height: \"40px\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"150px\",\r\n        margin: \"0 30px\"\r\n    },\r\n    pageBreak: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"440px\",\r\n        margin: \"30px 30px 20px\"\r\n    }\r\n}))\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#085ff7\",\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SignInButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n      backgroundColor: \"#085ff7\",\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        backgroundColor: \"#0542ac\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nconst HelperButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ffffff\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n        backgroundColor: \"#eeeeee\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nexport function Register() {\r\n    const isAuth = useSelector(state=>state.login.isAuth)\r\n    const classes = useStyles();\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\r\n    \r\n    const {success,isError,errorMsg} = useSelector(state=>state.register)\r\n    \r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeRegisterRequest({email,password}))\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        !isAuth ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            \r\n            {isError ? \r\n                <Box>\r\n                    {errorMsg}\r\n                </Box> :<></>\r\n            }\r\n            <Box className = {classes.boxImg}>\r\n                <img\r\n                    className = {classes.imgLogo}\r\n                    src = \"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 320 80' focusable='false'%3E%3Cpath d='M287.31 13.4a5.24 5.24 0 0 0-4.22-1.76 5 5 0 0 0-4.22 1.92 9 9 0 0 0-1.49 5.59V37a24.49 24.49 0 0 0-7-5.52 16.88 16.88 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24A18.43 18.43 0 0 0 247.06 36c-3.67 4.23-5.51 10.09-5.51 17.65A33.74 33.74 0 0 0 243 63.6a24 24 0 0 0 4.06 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.14 19.14 0 0 0 3.75-.35 14.73 14.73 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 30.13 30.13 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.66 5.66 0 0 0 8.21.08 7.48 7.48 0 0 0 1.8-5.17V18.48a7.76 7.76 0 0 0-1.72-5.08zm-12.15 49.22a11.56 11.56 0 0 1-4.18 5 10.7 10.7 0 0 1-5.78 1.64 10.45 10.45 0 0 1-5.78-1.72 11.84 11.84 0 0 1-4.18-5.16 20.67 20.67 0 0 1-1.52-8.37 20.86 20.86 0 0 1 1.45-8.14 12 12 0 0 1 4-5.4 9.68 9.68 0 0 1 5.94-1.88h.12a9.93 9.93 0 0 1 5.74 1.84 12.56 12.56 0 0 1 4.22 5.28 19.89 19.89 0 0 1 1.56 8.29 20.36 20.36 0 0 1-1.59 8.62zm-37.9.51a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66A17.22 17.22 0 0 1 205.6 57h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.59-7.74 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.53 1.75 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33 22.39 22.39 0 0 0 6.48-3.32 16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.17-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4H205.6c.4-4.09 1.57-7.29 3.52-9.36zM189 63.13a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66 17.22 17.22 0 0 1-1.64-7.43h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.58-7.71 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.54 1.72 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33A22.39 22.39 0 0 0 185 74a16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.16-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4h-21.8c.39-4.09 1.56-7.29 3.52-9.36zm-21.65-27.17A5.26 5.26 0 0 0 135 11.8a5 5 0 0 0-4.22 1.92c-1.31 1.52-1.65 3.24-1.65 5.7V37.2a23.57 23.57 0 0 0-6.62-5.57 17.21 17.21 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24 18.38 18.38 0 0 0-14.54 6.34c-3.63 4.23-5.47 10.1-5.47 17.65a35.11 35.11 0 0 0 1.37 9.94 24.13 24.13 0 0 0 4.1 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.72 19.72 0 0 0 3.75-.35 14.67 14.67 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 31.93 31.93 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.62 5.62 0 0 0 8.17.08 7.53 7.53 0 0 0 1.56-5.2V18.68a7.87 7.87 0 0 0-1.65-5.12zm-11.9 49.22a11.37 11.37 0 0 1-4.22 5 10.57 10.57 0 0 1-5.74 1.64 10.44 10.44 0 0 1-5.78-1.72 11.58 11.58 0 0 1-4.18-5.16 20.68 20.68 0 0 1-1.52-8.37 21.64 21.64 0 0 1 1.41-8.14 12.08 12.08 0 0 1 4.06-5.4 9.57 9.57 0 0 1 5.9-1.88h.16a9.72 9.72 0 0 1 5.6 1.88 12.35 12.35 0 0 1 4.26 5.28 20.52 20.52 0 0 1 1.56 8.29 21 21 0 0 1-1.51 8.58zM26 71.27v-28.8c.82.08 1.6.12 2.42.12A20.27 20.27 0 0 0 39 39.65v31.62c0 2.7-.49 4.7-1.71 6a6.16 6.16 0 0 1-4.77 2 6 6 0 0 1-4.69-2c-1.21-1.33-1.84-3.33-1.84-6zm-.12-69C34-.69 43.28-.53 50.23 5.5a11.79 11.79 0 0 1 3.36 4.5c.7 2.27-2.46-.23-2.89-.55a30.92 30.92 0 0 0-7.07-3.6C29.95 1.66 17 9.29 9 21.15A64.11 64.11 0 0 0 1.61 38a9.59 9.59 0 0 1-.7 2.11c-.35.67-.16-1.8-.16-1.88a52 52 0 0 1 1.41-7.36C5.87 17.94 14.08 7.18 25.88 2.25zm10.59 32A9.92 9.92 0 1 1 40.81 21a9.88 9.88 0 0 1-4.34 13.29zm20.87 2.53v1.5a21.48 21.48 0 0 1 6.9-6.13 18.79 18.79 0 0 1 8.65-1.94 17.35 17.35 0 0 1 8.45 2.06 13 13 0 0 1 5.55 5.82 13.56 13.56 0 0 1 1.55 4.78 48.84 48.84 0 0 1 .35 6.48v22.24A7.92 7.92 0 0 1 87.13 77a5.41 5.41 0 0 1-4.27 1.86A5.48 5.48 0 0 1 78.52 77a7.81 7.81 0 0 1-1.62-5.4V51.7c0-4-.59-7-1.68-9.09s-3.3-3.14-6.55-3.14a9.84 9.84 0 0 0-5.82 1.9A11 11 0 0 0 59 46.65c-.58 1.79-.91 5.09-.91 10v14.96c0 2.45-.52 4.23-1.65 5.47a5.68 5.68 0 0 1-4.34 1.82 5.38 5.38 0 0 1-4.29-1.9 7.82 7.82 0 0 1-1.67-5.4V37c0-2.29.5-4 1.51-5.09a5.1 5.1 0 0 1 4.07-1.71 5.41 5.41 0 0 1 2.83.74 5.29 5.29 0 0 1 2.06 2.25 8 8 0 0 1 .74 3.64z' fill='%232164f3' fill-rule='evenodd'/%3E%3C/svg%3E\"\r\n                    alt = \"Indeed\"\r\n                />\r\n            </Box>\r\n            <Box className = {classes.boxForm}>\r\n                <Grid container spacing = {3} >\r\n                    <Grid item>\r\n                        <Typography className = {classes.h5} variant = \"h5\">Create an Account (it's free)</Typography>\r\n                    </Grid>\r\n                    <Grid container item spacing = {3}>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #a6a6a6\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Google\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid black\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Apple\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #1877f2\", color: \"#1877f2\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Facebook\r\n                            </HelperButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid style = {{margin: \"10px 0\"}} container item>\r\n                        <Grid item>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                        <Grid style = {{lineHeight : \"0px\"}} item> or</Grid>\r\n                        <Grid>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form onSubmit = { handleSubmit }>\r\n                            <FormHelperText className = {classes.formhelperText}>Email Address</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                            <FormHelperText className = {classes.formhelperText}>Password</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                            <FormControlLabel className = {classes.checkbox}\r\n                                control = {<GreenCheckbox  />}\r\n                                label = \"Keep me signed in on this device.\"\r\n                            />\r\n                            <br/>\r\n                            <SignInButton type = \"submit\" className = {classes.button} variant = \"contained\">\r\n                                Create Account\r\n                            </SignInButton>\r\n                        </form>\r\n                    </Grid>\r\n                    <hr className = {classes.pageBreak}></hr>\r\n                </Grid>\r\n                <Typography align = \"left\" variant = \"caption\">\r\n                    By creating an account, you agree to Indeed's <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Terms of Service</a>, <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Cookie Policy</a><br/>\r\n                    and <a style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Privacy Policy.</a>. You consent to receiving marketing messages from Indeed <br/> \r\n                    and may opt out from receiving such messages by following the unsubscribe link in our messages, or as detailed in our terms.\r\n                </Typography>\r\n            </Box>\r\n            <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" component={Link} to=\"/login\" style = {{cursor: \"pointer\",color: \"#085ff7\"}}>\r\n                        Have an account? Sign in\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        Forgot Your Password\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography align = \"center\" variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        HelpCentre\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'top',horizontal:'left'}}\r\n                open={snackBarOpen}\r\n                autoHideDuration={3000}\r\n                message={<span className=\"format__id\">Regitered Succesfully</span>}\r\n                ContentProps={{\r\n                    'aria-describedby':'message-id'\r\n                }}\r\n                onClose={()=>setSnackBarOpen(false)}\r\n                action={[\r\n                    <IconButton\r\n                    onClick={()=>{setSnackBarOpen(false)}}\r\n                    color=\"inherit\"\r\n                    key=\"close\"\r\n                    aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                ]} />\r\n        </Container> : <Redirect to=\"/\" />\r\n    )\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SavedJobs.jsx",["255","256"],"import { Box, Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useReducer, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { makeSaveJobRequest } from '../../Redux/SaveJob/actions';\r\nimport { timeDifference } from '../../Utils/timeDifference';\r\nimport {ApplyModal} from \"../Layout/JobApplyModal/ApplyModal\"\r\nimport {makeApplyRequest} from \"../../Redux/JobApply/actions\"\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    applyButton:{\r\n        color:'white',\r\n        width:\"200px\",\r\n        height:'40px',\r\n        borderRadius:'50px',\r\n        backgroundColor:'#0145E3',\r\n        marginRight:'2%',\r\n        '&:hover':{\r\n            color:'white',\r\n            \r\n            borderRadius:'50px',\r\n            backgroundColor:'#0145E3',\r\n            marginRight:'2%',\r\n        }\r\n    },\r\n    updateButton:{\r\n        color:'#0145E3',\r\n        width:\"200px\",\r\n        height:'40px',\r\n        border:'2px solid #909090',\r\n        borderRadius:'50px',\r\n        \r\n    }\r\n}))\r\n\r\nfunction SavedJobs(props) {\r\n    const classes = useStyles();\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const jobKeys = Object.keys(saved_jobs).reverse()\r\n    const applied = Object.keys(applied_job).reverse()\r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n    // console.log(loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n       \r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id:id,saved_jobs}))\r\n        forceUpdate();\r\n    }\r\n\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n       \r\n        console.log(jobId)\r\n        applied_job[jobId]={...saved_jobs[jobId],dateSaved:new Date().getTime()}\r\n        delete saved_jobs[jobId]\r\n        dispatch(makeApplyRequest({user_id:id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        \r\n        <Container style={{padding:'100px 10vw',display:'flex'}}>\r\n                <Box>\r\n                    <Typography variant={'h5'} style={{fontSize:'40px',marginBottom:'20px'}}>\r\n                        My Jobs\r\n                    </Typography>\r\n                    <ul style={{display:'flex',marginBottom:'20px'}}>\r\n                        <NavLink to=\"/savedjobs\" activeStyle={{\r\n                            color:\"#0145E3\",\r\n                            textDecoration:'underline'\r\n                        }}\r\n                        style={{\r\n                            fontSize:'25px',\r\n                            marginRight:\"30px\"\r\n                        }}\r\n                        >\r\n                            Saved {jobKeys.length}\r\n                        </NavLink>\r\n                        <NavLink to=\"/appliedjobs\"\r\n                        style={{\r\n                            fontSize:'25px'\r\n                        }}\r\n                        \r\n                        >\r\n                            Applied {applied.length}\r\n                        </NavLink>\r\n                    </ul>\r\n\r\n                    <Box>\r\n                        \r\n                            {\r\n                                jobKeys.map((key)=>{\r\n                                    return (\r\n                                        <Box style={{display:'flex'}}   key={key} >\r\n                                        \r\n                                            <Box style={{width:'500px'}}>\r\n                                                <Typography variant='h5' style={{fontSize:'18px',marginBottom:'15px'}}> \r\n                                                    {saved_jobs[key].jobTitle}\r\n                                                </Typography>\r\n                                                <Box style={{marginBottom:'15px',fontWeight:'600',color:'grey'}}>\r\n                                                {saved_jobs[key].companyName} | {saved_jobs[key].location}\r\n                                                </Box>\r\n                                                <Box style={{marginBottom:'30px',fontSize:'14px',fontWeight:'400',color:'grey'}}>\r\n                                                    Saved { timeDifference(saved_jobs[key].dateSaved)}\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <Box style={{display:'flex'}}>\r\n                                            <Button className={classes.applyButton} onClick={()=>handleOpen(key)} disabled={applied_job[key]?true:false}>\r\n                                                    {applied_job[key]?\"Already applied\":\"Apply\"}\r\n                                                </Button>\r\n                                            <Button className={classes.updateButton}>\r\n                                                    Update\r\n                                            </Button>\r\n                                            </Box>\r\n                                            <Box onClick={()=>{removeFromSaved({jobkey:key})}} style={{cursor:\"pointer\",width:\"40px\",height:'40px',display:'flex',justifyContent:'center',alignItems:'center'}} >\r\n                                                <span>\r\n                                                    X\r\n                                                </span>\r\n                                            </Box>\r\n                                    </Box>\r\n                                    )\r\n                                })\r\n                            }\r\n                        \r\n                            \r\n                    \r\n                    </Box>\r\n                    <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n                    />\r\n                </Box>\r\n           \r\n        \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SavedJobs;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SearchResult.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx",["257","258","259"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { IconButton, Typography } from '@material-ui/core';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../../Redux/Login/actions';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n      width:'400px',\r\n    '&:focus': {\r\n     \r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n       \r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory();\r\n  const loggedUser = useSelector(state=>state.login.loggedUser);\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleClick}\r\n                >\r\n            <PersonIcon/>\r\n        </IconButton>\r\n  \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        \r\n      >\r\n        <Typography variant={'h5'} style={{fontSize:'20px',marginLeft:'15px'}}>\r\n            {loggedUser.email}\r\n        </Typography>\r\n        <StyledMenuItem onClick={()=>{\r\n            handleClose()\r\n            history.push('/savedjobs')}}>\r\n          <ListItemIcon>\r\n            <FavoriteIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"My Jobs\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <ListItemIcon>\r\n            <RateReviewIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"My Reviews\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem onClick={()=>{\r\n            handleClose()\r\n            dispatch(logout())\r\n            }}>\r\n          <ListItemIcon>\r\n            <PowerSettingsNewIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sign Out\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["260","261","262","263","264","265","266","267","268","269"],"import React, { useEffect, useState,  useReducer } from 'react';\r\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport classNames from 'classnames'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\nimport FillterButton from '../Layout/FilterJobsButton/FillterButton';\r\nimport { getSearchData, fetchSuccess, setCount } from '../../Redux/Search/actions';\r\nimport JobDescription from '../Layout/JobDescription';\r\nimport styled from 'styled-components'\r\nimport {timeDifference} from '../../Utils/timeDifference'\r\nimport JobMenu from '../Layout/Menu/JobMenu';\r\nimport {makeSaveJobRequest} from '../../Redux/SaveJob/actions'\r\nimport { Button } from '@material-ui/core';\r\nconst useStyles = makeStyles(theme=>({\r\n    jobContainer:{\r\n        width:'450px',\r\n       \r\n        \r\n    },\r\n    card:{\r\n        border:'1px solid black',\r\n        padding:'15px',\r\n        cursor:'pointer',\r\n        position:'relative',\r\n        height:'300px',\r\n        marginBottom:'20px',\r\n        '&:hover':{\r\n            '& $job_title':{\r\n                textDecoration:'underline'\r\n            }\r\n        },\r\n        borderRadius:'10px'\r\n    },\r\n    job_title:{\r\n        fontWeight:'bold',\r\n        fontSize:'20px'\r\n    },\r\n    job_subTitle:{\r\n        fontSize:'16px'\r\n    },\r\n    job_snippet:{\r\n        margin:'20px 0px 10px 0px',\r\n        fontSize:'15px',\r\n        lineHeight:'1.4rem'\r\n    },\r\n    greyText:{\r\n        fontSize:'14px',\r\n        color:'grey'\r\n    },\r\n    job_section:{\r\n        padding:'0 8vw',\r\n        position:'relative'\r\n    },\r\n    sort_container:{\r\n                    display:'flex',\r\n                    justifyContent:\"space-between\",\r\n                    width:\"450px\",\r\n                    fontSize:'14px',\r\n                    margin:'10px 0px'\r\n    },\r\n    sortStyle:{\r\n        color:theme.palette.primary.main,\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            textDecoration:'underline'\r\n        }\r\n    },\r\n    bold:{\r\n        fontWeight:'bolder',\r\n        cursor:'pointer',\r\n    }\r\n}))\r\n\r\nconst LoadingContainer = styled.div`\r\n        width:100%;\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items:center;\r\n\r\n\r\n\r\n        .loader {\r\n            position: relative;\r\n            display: grid;\r\n            grid-template-columns: 33% 33% 33%;\r\n            grid-gap: 2px;\r\n            width: 75px;\r\n            height: 75px;\r\n            \r\n            \r\n            > div {\r\n                position: relative;\r\n                width: 100%;\r\n                height: 100%;\r\n                background: #0652DD;\r\n                transform: scale(0.0);\r\n                transform-origin: center center;\r\n                animation: loader 2s infinite linear;\r\n                \r\n                &:nth-of-type(7) {}\r\n                \r\n                &:nth-of-type(1),\r\n                &:nth-of-type(5), \r\n                &:nth-of-type(9) {\r\n                    animation-delay: 0.4s;\r\n                }\r\n                \r\n                &:nth-of-type(4),\r\n                &:nth-of-type(8) {\r\n                    animation-delay: 0.2s;\r\n                }\r\n                \r\n                &:nth-of-type(2),\r\n                &:nth-of-type(6) {\r\n                    animation-delay: 0.6s;\r\n                }\r\n                \r\n                &:nth-of-type(3) {\r\n                    animation-delay: 0.8s;\r\n                }\r\n            }\r\n        }\r\n        \r\n        @keyframes loader {\r\n            0%   { transform: scale(0.0); }\r\n            40%  { transform: scale(1.0); }\r\n            80%  { transform: scale(1.0); }\r\n            100% { transform: scale(0.0); }\r\n        }\r\n    `\r\n\r\n\r\n\r\nfunction DisplayJobs(props) {\r\n    \r\n    const query = new URLSearchParams(props.location.search)\r\n\r\n    const classes = useStyles()\r\n\r\n    let job = query.get('q') || \"\"\r\n    let location = query.get('location') || \"\"\r\n    let jt = query.get(\"jt\") || \"\"\r\n    let occu = query.get(\"occupation\") || \"\"\r\n    let edu = query.get(\"education\") || \"\"\r\n    let sal = query.get(\"salary\") || \"\"\r\n    \r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n    \r\n    let jobs = useSelector(state=>state.search.searched)\r\n    let totalCount = useSelector(state=>state.search.totalCount)\r\n    const loggedUser = useSelector(state=>state.login.loggedUser);\r\n    let isLoading = useSelector(state=>state.search.isLoading)\r\n    \r\n    const handelReset = ()=>{\r\n        dispatch(getSearchData(job,location,page))\r\n        forceUpdate()\r\n    }\r\n    \r\n    const pageNo = query.get('page')\r\n    console.log(pageNo)\r\n    let [page,setPage] = useState(pageNo)\r\n    let [jobType,setJobType] = useState(jt) \r\n    let [fromage,setFromage] = useState(0)\r\n    let [sortType,setSortType] = useState('salary')\r\n    let [occupation, setOccupation] = useState(occu)\r\n    let [education , setEducation] = useState(edu)\r\n    let [salary , setSalary] = useState(sal)\r\n\r\n\r\n    let [sortDateIsCliked,setSortDateIsCliked] = useState(false)\r\n\r\n \r\n\r\n\r\n    const limitWords = (snippet)=>{\r\n\r\n        let str = \"\";\r\n        console.log(snippet)\r\n        for(let i = 0; i < 200 && !str[i]; i++){\r\n            str += snippet[i]\r\n        }\r\n        str += '........'\r\n        return str\r\n    }\r\n\r\n    let [jobData,setJobData] = useState(null)   \r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    const handlePageChange = (event, page) => {\r\n        setPage(page)\r\n        // console.log(job)\r\n        history.push(`/jobs?q=${job}&location=${location}&page=${page}`)\r\n    };\r\n\r\n\r\n\r\n    const handleSort = (sort)=>{\r\n        setSortDateIsCliked(!sortDateIsCliked)\r\n        if(sort==='salary'){\r\n            const newJob = jobs.sort((a,b)=>{\r\n                return Number(b.startSalary) - Number(a.startSalary)\r\n\r\n            })\r\n            dispatch(fetchSuccess(newJob))\r\n            }\r\n        else\r\n         {\r\n            const newJob = jobs.sort((a,b)=>{\r\n                return Number(b.date) - Number(a.date)\r\n\r\n            })\r\n            dispatch(fetchSuccess(newJob))\r\n        }\r\n            \r\n        }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        dispatch(getSearchData(job,location,page))\r\n        forceUpdate()\r\n    },[job,location,page])\r\n\r\n\r\n\r\n    const getJobDescription = (job)=>{\r\n        \r\n       \r\n                setJobData(job)\r\n            \r\n    }\r\n\r\n    const handelSave = ({jobkey,location,companyName,jobTitle})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        saved_jobs[jobkey] = {\r\n            jobkey,location,companyName,jobTitle,\r\n            dateSaved:new Date().getTime()\r\n        }\r\n        \r\n        dispatch(makeSaveJobRequest({user_id:id,saved_jobs}))\r\n    }\r\n\r\n    const removeFromSaved = ({jobkey})=>{\r\n        const {id,saved_jobs} = loggedUser\r\n        delete saved_jobs[jobkey]\r\n        dispatch(makeSaveJobRequest({user_id:id,saved_jobs}))\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Container className={classes.job_section}>\r\n            <Box style={{transform:\"scale(0.8) translateX(-12%)\"}}>\r\n                <SearchForm />\r\n            </Box>\r\n            {\r\n                isLoading ? (\r\n                    <LoadingContainer >\r\n                        <div className=\"loader\">\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </LoadingContainer>\r\n                ):(\r\n                    <>\r\n                        <Box>\r\n                <FillterButton type={jobType} setType={setJobType} \r\n                typeArr={['Full-Time','Walk-In','Fresher','Part-Time']}\r\n                formatDate={false}\r\n                fiterType='jobType'\r\n                jobs={jobs}\r\n                typeStr='JOB TYPE'/>\r\n\r\n\r\n                <FillterButton type={occupation} setType={setOccupation} \r\n                typeArr={['Software','Government','Account','Executive and personal assitansts']}\r\n                formatDate={false}\r\n                fiterType='occupation'\r\n                jobs={jobs}\r\n                typeStr='Occupation'/>\r\n\r\n                <FillterButton type={education} setType={setEducation} \r\n                typeArr={[`12th Pass`,`Diploma`,`Bachelor's degree`,`Master's degree`]}\r\n                formatDate={false}\r\n                fiterType='education'\r\n                jobs={jobs}\r\n                typeStr='Education'/>\r\n{/* \r\n                <FillterButton type={salary} setType={setSalary} \r\n                typeArr={[\"1k-5k\",\"10k-20k\"]}\r\n                formatDate={false}\r\n                jobs={jobs}\r\n                fiterType='salary'\r\n                typeStr='Salary'/> */}\r\n            <Button onClick={handelReset}>\r\n                Resest\r\n            </Button>\r\n            </Box>\r\n            <Box className={classes.greyText}>\r\n                jobs in {location}\r\n            </Box>\r\n            <Box className={classes.sort_container}>\r\n                <Box>\r\n                    Sort by \r\n                    <span className={classNames({[classes.sortStyle] : sortDateIsCliked , [classes.bold] : !sortDateIsCliked})} onClick={()=>handleSort('salary')}> salary </span> \r\n                    / \r\n                    <span className={classNames({[classes.sortStyle] : !sortDateIsCliked , [classes.bold] : sortDateIsCliked})} onClick={()=>handleSort('date')}> date </span>\r\n                </Box>\r\n                <Box>\r\n                    {\r\n                        `Page ${page} of ${totalCount} results`\r\n                    }\r\n                </Box>\r\n              \r\n            </Box>\r\n           \r\n                <Box style={{display:'flex'}}>\r\n                     \r\n                    <Grid className={classes.jobContainer}  container>\r\n\r\n                        {\r\n                            jobs.map((job,index)=>\r\n                            <Grid className={classes.card}  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                                <Box onClick={()=>getJobDescription(job)} >\r\n                                    <Typography  className={classes.job_title}>\r\n                                        {job.jobTitle}\r\n                                    </Typography>\r\n                                    <Typography className={classes.job_subTitle}>\r\n                                        {job.companyName}\r\n                                    </Typography>\r\n                                    <Typography className={classes.job_subTitle}>\r\n                                        {job.location}\r\n                                    </Typography>\r\n                                    <Typography className={classes.job_subTitle}>\r\n                                    ₹ {Number(job.startSalary).toLocaleString('en-IN')} - ₹ {Number(job.endSalary).toLocaleString('en-IN')}\r\n                                    </Typography>\r\n                                    <div className={classes.job_snippet} >\r\n                                        {\r\n                                            limitWords(job.snippet)\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.greyText}>\r\n                                        {timeDifference(job.date)}\r\n                                    </Typography>\r\n                                </Box>\r\n                                <JobMenu \r\n                                job={job} \r\n                                handelSave={handelSave}\r\n                                removeFromSaved={removeFromSaved}/>\r\n                            </Grid>)\r\n                        }\r\n                        \r\n                    </Grid>\r\n                    {\r\n                        jobData ? <JobDescription jobData={jobData} summary={job.snippet} /> : <></> \r\n                    }\r\n                    \r\n                </Box>\r\n                <Pagination onChange={handlePageChange} count={\r\n                    totalCount % 10 === 0 ?\r\n                    Math.floor(totalCount/10) : Math.floor(totalCount/10) + 1 } variant=\"outlined\" shape=\"rounded\" />\r\n                \r\n                    </>\r\n                )\r\n            }\r\n            \r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\nexport default DisplayJobs;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx",["270","271"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CompanyBox } from \"../Layout/Companies/CompanyBox\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { searchCompany, getCompanyReviews } from '../../Redux/CompanyReviews/action';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Box, \r\n    Container,\r\n    makeStyles,\r\n    Grid,\r\n    Typography,\r\n    OutlinedInput,\r\n    Button,\r\n    withStyles,\r\n    InputAdornment,\r\n    TextField,\r\n    FormHelperText\r\n\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        padding: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\" \r\n    },\r\n    boxSearch: {\r\n        backgroundColor: \"white\",\r\n        margin: 0,\r\n        height: \"310px\",\r\n        backgroundPosition: \"bottom right\",\r\n        backgroundImage: \"url(/Images/companyreview.PNG)\",\r\n        backgroundRepeat: \"no-repeat\"\r\n\r\n    },\r\n    outerSearchGrid: {\r\n        marginTop: \"50px\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"flex-end\"\r\n    },\r\n    h3: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: \"20px\" \r\n    },\r\n    h5: {\r\n        color: \"#6f78a5\",\r\n        fontWeight: \"400\",\r\n        marginBottom: \"70px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"2px solid #cccccc\",\r\n        borderRadius: \"10px\",\r\n        width: \"450px\"\r\n    },\r\n    formhelperText: {\r\n        color: \"#085ff7\",\r\n        paddingLeft: \"20px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    companiesHiring: {\r\n        marginTop: \"50px\",\r\n        marginBottom: \"20px\",\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n    }\r\n}))\r\n\r\nconst SearchButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#085ff7\",\r\n        cursor: \"pointer\",\r\n        width: \"200px\",\r\n        borderRadius: \"200px\",\r\n        height: \"53px\",\r\n        marginLeft: \"50px\",\r\n        '&:hover': {\r\n            backgroundColor: \"#0542ac\",\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport function CompanyReviews() {\r\n\r\n    const classes = useStyles();\r\n    const[companies, setCompanies] = useState([]);\r\n    const[query, setQuery] = useState(\"\");\r\n    const isSearching = useSelector(state => state.companies.isSearching);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    console.log(companies)\r\n\r\n    const onTextChange = (e) => {\r\n        setQuery(e.target.value);\r\n        console.log(query)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(searchCompany(query))\r\n    }\r\n\r\n    const handleCompanyClick = (id) => {\r\n        dispatch(getCompanyReviews(id));\r\n        history.push(`/reviews?id=${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/companies\")\r\n            .then((res) => {\r\n                \r\n                setCompanies(res.data)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    },[])\r\n\r\n\r\n    return (\r\n        !isSearching ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            <Grid container className = {classes.boxSearch} >\r\n                <Grid item container className = {classes.outerSearchGrid} xs={12} sm={12} md={9} lg={8} xl={8}>\r\n                    <Grid item>\r\n                        <Typography className = {classes.h3} variant = \"h3\">\r\n                            Find great places to work\r\n                        </Typography>\r\n                        <Typography className = {classes.h5} variant = \"h5\">\r\n                            Discover millions of company reviews\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form onSubmit = {handleSubmit} style = {{display: \"flex\"}}>\r\n                        <Grid item>\r\n                            <TextField  \r\n                                className = {classes.outlinedInput} \r\n                                required \r\n                                type = \"text\" \r\n                                variant=\"outlined\"\r\n                                placeholder = \"Enter a company name\"\r\n                                value = { query }\r\n                                onChange = { onTextChange }\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                    )\r\n                                    }}\r\n                                />\r\n                            <FormHelperText className = {classes.formhelperText}>Do you want to search for salaries?</FormHelperText>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <SearchButton type = \"submit\" variant = \"contained\">\r\n                                Search\r\n                            </SearchButton>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className = {classes.companiesHiring} container xl = {9} lg = {9} md = {9} sm = {11} xs = {12}>\r\n                <Grid item container  >\r\n                    <Grid item>\r\n                        <img src=\"/Images/location.PNG\" alt=\"location pin\" style = {{padding: \"5px 0 5px 10px\"}} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style = {{paddingTop: \"15px\"}} variant = \"h5\">Companies Hiring Now</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{maxWidth:'1000px'}}>\r\n                        {\r\n                            companies.map((item) => {\r\n                                return(\r\n                                    <CompanyBox \r\n                                        key = {item.id}\r\n                                        logo = {item.logo}\r\n                                        name = {item.company}\r\n                                        rating = {item.ratings}\r\n                                        id = {item.id}\r\n                                        handleClick = {handleCompanyClick}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className = {classes.companiesHiring} container xl = {9} lg = {9} md = {9} sm = {11} xs = {12}>\r\n                <Grid item container  >\r\n                    <Grid item>\r\n                        <img src=\"/Images/popularcompany.PNG\" alt=\"location pin\" style = {{padding: \"5px 0 5px 10px\"}} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style = {{paddingTop: \"15px\"}} variant = \"h5\">Popular Companies</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{width:'1000px'}}>\r\n                        {\r\n                            companies.map((item) => {\r\n                                return(\r\n                                    <CompanyBox \r\n                                    key = {item.id}\r\n                                    logo = {item.logo}\r\n                                    name = {item.company}\r\n                                    rating = {item.ratings}\r\n                                    id = {item.id}\r\n                                    handleClick = {handleCompanyClick}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className = {classes.companiesHiring} style = {{borderTop: \"10px solid #ff5a1f\", padding: \"25px\", justifyContent: \"space-between\"}} container xl={9} lg={9} md={9} sm={11} xs={12}>\r\n                <Grid item >\r\n                    <Typography variant = \"h5\">Rate your recent company:</Typography>\r\n                </Grid>\r\n                <Grid item style = {{backgroundColor: \"#f2f2f2\", padding: \"0 5px\", borderRadius: \"50px\"}}>\r\n                    <Rating name=\"pristine\" size = \"large\" style = {{color: \"blue\"}} />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container> : <Redirect to = \"/review\" />\r\n    )\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx",["272"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyReviews } from '../../Redux/CompanyReviews/action';\r\nimport axios from \"axios\";\r\nimport { ReviewBox } from \"../Layout/Review/ReviewBox\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { Grid, \r\n    Container,\r\n    makeStyles,\r\n    Typography,\r\n    Button,\r\n    withStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    imgCont: {\r\n        padding: \"5px\",\r\n        borderRadius: \"5px\",\r\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n    },\r\n    optionTab: {\r\n        cursor: \"pointer\",\r\n        margin: \"0 40px 0 40px\",\r\n        '&:hover': {\r\n            borderBottom: \"5px solid #397ff8\",\r\n            fontWeight: \"bold\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst FollowButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#085ff7\",\r\n        cursor: \"pointer\",\r\n        width: \"200px\",\r\n        borderRadius: \"200px\",\r\n        height: \"43px\",\r\n        marginLeft: \"50px\",\r\n        '&:hover': {\r\n            backgroundColor: \"#0542ac\",\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport function Review(props) {\r\n    const classes = useStyle();\r\n    const companyDetails = useSelector(state => state.companies.currentCompany);\r\n    const [reviews, setReviews] = useState([]);\r\n    const query = new URLSearchParams(props.location.search);\r\n    const id =query.get('id')\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(getCompanyReviews(id));\r\n\r\n        axios.get(`http://localhost:8000/reviews?company_id=${id}`)\r\n            .then((res) => {\r\n                setReviews(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch((err) => console.log(\"Error getting reviews\" + err))\r\n        \r\n    },[])\r\n    return (\r\n\r\n        companyDetails ?\r\n        <Container maxwidth = \"xl\">\r\n            <Grid container style = {{justifyContent:\"space-between\", alignItems: \"center\", marginBottom: \"40px\"}}>\r\n                <Grid container item lg={6} md={7} sm={8}>\r\n                    <Grid item className = {classes.imgCont} >\r\n                        <img src={companyDetails.logo} alt={companyDetails.company} width=\"100px\" />\r\n                    </Grid>\r\n                    <Grid item style = {{paddingTop: \"40px\", paddingLeft: \"20px\"}}>\r\n                        <Typography variant=\"h5\" >{companyDetails.company}</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            {companyDetails.ratings}\r\n                            <StarIcon style = {{color: \"#9d2b6b\", paddingRight: \"10px\"}}/>\r\n                            <Typography variant=\"caption\" >{reviews.length} reviews</Typography>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid  item >\r\n                    <FollowButton>Follow</FollowButton>\r\n                    <br/>\r\n                    <Typography variant=\"caption\" >Get weekly updates, new jobs, and reviews</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style = {{height: \"40px\"}}>\r\n                <Grid item style = {{cursor: \"pointer\", fontWeight: \"bold\", borderBottom: \"5px solid #085ff7\"}}>\r\n                    SnapShot\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    Why Join Us\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {reviews.length} Reviews\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.salaries} Salaries\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.photos} Photos\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.jobs} Jobs\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.questions} Questions\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    Interviews\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style = {{marginTop: \"20px\", marginBottom: \"30px\"}} >\r\n                <Typography variant = \"caption\" >{companyDetails.company} Careers and Employment</Typography>\r\n            </Grid>\r\n            <Grid item style = {{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                <Typography variant = \"h4\"><b>About the company</b></Typography>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item>\r\n                    <img src={companyDetails.ceo_image} alt={companyDetails.ceo_name} style={{height:\"350px\", borderRadius: \"10px\"}}/>\r\n                </Grid>\r\n                <Grid container item >\r\n                    <Grid item style = {{border: \"1px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            CEO\r\n                        </div>\r\n                        <br/>\r\n                        <div style = {{}}>\r\n                            {companyDetails.ceo_name}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item style = {{border: \"1px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Revenue\r\n                        </div>\r\n                        <br/>\r\n                        <div style = {{}}>\r\n                            {companyDetails.revenue}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item >\r\n                <Grid item style = {{border: \"1px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Founded\r\n                        </div>\r\n                        <br/>\r\n                        <div style = {{}}>\r\n                            {companyDetails.founded_year}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item style = {{border: \"1px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Company size\r\n                        </div>\r\n                        <br/>\r\n                        <div style = {{}}>\r\n                            more than<br/>\r\n                            {companyDetails.company_size}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style = {{justifyContent: \"center\", padding: \"40px\"}}>\r\n                <Typography variant = \"body2\" style = {{color: \"#767676\", textAlign: \"left\"}}>\r\n                    {companyDetails.description}\r\n                </Typography>\r\n            </Grid>\r\n            <Typography variant = \"h5\" style = {{color: \"#085ff7\", fontWeight: \"600\", cursor: \"pointer\"}}>\r\n                Learn More \r\n            </Typography>\r\n            <Grid item style = {{marginTop: \"30px\", marginBottom: \"50px\"}}>\r\n                <Typography variant = \"h4\"><b>Reviews</b></Typography>\r\n            </Grid>\r\n            <Grid container spacing={10}>\r\n                {\r\n                    reviews.map((item) => {\r\n                        return (\r\n                            <ReviewBox \r\n                                key = {item.id}\r\n                                rating = {item.rating}\r\n                                job_position = {item.job_position}\r\n                                date = {item.date}\r\n                                title = {item.title}\r\n                                description = {item.description}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n\r\n\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"50px -20px 0\"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        : <></>\r\n    )\r\n}\r\n","D:\\project\\IndeedReactClone\\my-app\\src\\Utils\\timeDifference.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actions.js",["273","274"],"import axios from \"axios\"\r\nimport { APPLY_JOB_FAILURE, APPLY_JOB_REQUEST, APPLY_JOB_SUCCESS } from \"./actionTypes\"\r\n\r\nconst applyJobRequest = ()=>{\r\n    return {\r\n        type:APPLY_JOB_REQUEST\r\n    }\r\n}\r\n\r\nconst applyJobSuccess = ()=>{\r\n    return {\r\n        type:APPLY_JOB_SUCCESS\r\n    }\r\n}\r\n\r\nconst applyJobFailure = ()=>{\r\n    return {\r\n        type : APPLY_JOB_FAILURE\r\n    }\r\n}\r\n\r\n\r\nexport const makeApplyRequest = ({user_id,saved_jobs,applied_job})=>(dispatch)=>{\r\n    \r\n    // dispatch(applyJobRequest())\r\n    let payload={\r\n        saved_jobs,applied_job\r\n    }\r\n    axios.patch(`http://localhost:8000/users/${user_id}`,{\r\n        saved_jobs,applied_job\r\n        \r\n    }).then(res=>{\r\n        dispatch(applyJobSuccess())\r\n    }).catch(err=>{\r\n        dispatch(applyJobFailure())\r\n    })\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actions.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\action.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Quill.jsx",["275"],"import React, { useState } from \"react\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nexport default function Quill({jobDescription,setJobDescription}) {\r\n  \r\n\r\n  return (\r\n    <ReactQuill theme=\"snow\"  defaultValue={jobDescription} onChange={setJobDescription}>\r\n\r\n      \r\n    </ReactQuill>\r\n  );\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\actionType.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actionType.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actionTypes.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx",["276","277","278","279","280","281","282","283","284","285","286","287"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { IconButton, List, ListItem, Typography } from '@material-ui/core';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport NotInterested from '@material-ui/icons/NotInterested';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { fetchSuccess } from '../../../Redux/Search/actions';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function JobMenu({job,handelSave,removeFromSaved}) {\r\n\r\nconst {jobkey,companyName,location,jobTitle} = job\r\nlet jobs = useSelector(state=>state.search.searched)\r\nconst {saved_jobs} = useSelector(state=>state.login.loggedUser)\r\nconst dispatch = useDispatch()\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const removeFromList = ({jobkey,location,companyName,jobTitle})=>{\r\n    const newJobs = jobs.filter((job)=>job.jobkey !== jobkey)\r\n    dispatch(fetchSuccess(newJobs))\r\n  }\r\n\r\n  return (\r\n    <div style={{position:'absolute',top:\"0\",right:'0'}}>\r\n        \r\n        <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n     \r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n        \r\n      >\r\n        {\r\n\r\n        saved_jobs[jobkey] ?\r\n          <MenuItem   onClick={()=>{\r\n              handleClose();\r\n              removeFromSaved({jobkey})\r\n          }}>\r\n\r\n            <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n              <FavoriteIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Saved\" />\r\n          </MenuItem> \r\n        \r\n        :\r\n\r\n          <MenuItem   onClick={()=>{\r\n            handleClose();\r\n            handelSave({jobkey,location,companyName,jobTitle})\r\n        }}>\r\n\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}} > \r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Save Job\" />\r\n        </MenuItem>\r\n        }\r\n\r\n        <MenuItem onClick={()=>{\r\n               handleClose();\r\n               removeFromList({jobkey,location,companyName,jobTitle})\r\n            }}  >\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <NotInterested fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Not Interseted\" />\r\n        </MenuItem>\r\n        <MenuItem style={{backgroundColor: 'white',color:\"black\"}}>\r\n          <ListItemIcon style={{display:'flex',justifyContent:'center'}}>\r\n            <ErrorIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Is there a problem with the job\" />\r\n        </MenuItem>\r\n      </StyledMenu>\r\n       \r\n    </div>\r\n  );\r\n}","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx",["288","289","290"],"import { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport React , {useReducer,useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport  Section  from './Section';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { makeApplyRequest } from '../../Redux/JobApply/actions';\r\nimport { ApplyModal } from './JobApplyModal/ApplyModal';\r\nconst useStyles = makeStyles(theme=>({\r\n    container:{\r\n        position:'sticky',\r\n        top:'20px',\r\n        marginLeft:'50px',\r\n        alignSelf: 'flex-start',\r\n        border:'1px solid black',\r\n        padding:'20px',\r\n        flex:'1',\r\n        borderRadius:'10px '\r\n    },\r\n    link:{\r\n        \r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        borderRadius:'10px',\r\n        height:'53px',\r\n        padding:'0 25px',\r\n        fontSize:'20px',\r\n        color:'white',\r\n        \r\n        backgroundColor:theme.palette.primary.main,\r\n        '&:hover':{\r\n            color:theme.palette.primary.main,\r\n            backgroundColor:'white',\r\n            border:`1px solid ${theme.palette.primary.main}`\r\n\r\n        }\r\n    }\r\n})) \r\nfunction JobDescription({jobData}) {\r\n    const classes = useStyles()\r\n    const {companyName,location,companyUrl,snippet,jobTitle,jobDescription,startSalary,endSalary,jobkey} = jobData\r\n    const {saved_jobs,applied_job,id} = useSelector(state=>state.login.loggedUser)\r\n    const [open, setOpen] = useState(false)\r\n    const [jobId, setJobId] = useState(\"\")\r\n    const [ignored, forceUpdate] =useReducer(x => x + 1, 0)\r\n\r\n    const dispatch = useDispatch();\r\n    const handleClose=() =>{\r\n        setOpen(false)\r\n        setJobId(\"\")\r\n    }\r\n\r\n    const handleOpen=(id)=>{\r\n        setJobId(id)\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleApply=()=>{\r\n       \r\n        console.log(jobId)\r\n        applied_job[jobId]={...saved_jobs[jobId],dateSaved:new Date().getTime()}\r\n        delete saved_jobs[jobId]\r\n        dispatch(makeApplyRequest({user_id:id,saved_jobs,applied_job}))\r\n        setOpen(false)\r\n        forceUpdate()\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.container}>\r\n            <Typography variant={'h5'} style={{marginBottom:'10px'}}>\r\n                {jobTitle}\r\n            </Typography>\r\n            <Box style={{marginBottom:'10px'}}>\r\n                {companyName},{location}\r\n            </Box>\r\n            \r\n            <Box style={{marginBottom:'10px'}}>\r\n                ₹ {Number(startSalary).toLocaleString('en-IN')} - ₹ {Number(endSalary).toLocaleString('en-IN')}\r\n            </Box>\r\n            \r\n            <Button className={classes.link} onClick={()=>handleOpen(jobkey)} disabled={applied_job[jobkey]?true:false}  style={{marginBottom:'30px'}}>\r\n                {applied_job[jobkey]?'Applied':'Applied Now'}\r\n            </Button>\r\n            <Section jobDescription={jobDescription} summary={snippet} />\r\n            <ApplyModal \r\n                    open={open}\r\n                    handleClose = {()=>handleClose()}\r\n                    jobId = {jobId}\r\n                    handleApply ={()=>handleApply()}\r\n            />\r\n\r\n            \r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default JobDescription;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx",[],"D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx",["291"],"import React from 'react';\r\nimport { Box, Grid, Typography, makeStyles } from '@material-ui/core';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cursorPointer: {\r\n        cursor: \"pointer\",\r\n        '&:hover':{\r\n            textDecoration: \"underline\"\r\n        }\r\n    }\r\n}))\r\n\r\nexport function CompanyBox({ logo, rating, name, handleClick, id}) {\r\n    const classes = useStyles();\r\n\r\n    console.log(name)\r\n    return (\r\n        \r\n            <Grid item container lg={4} md={4} sm={6} xs={12} style={{display:'flex', border: \"1px solid #f2f2f2\", padding: \"20px\"}}>\r\n                <Grid item>\r\n                    <img src = {logo} alt = {name} width = \"50px\" style={{marginLeft:'10px'}}/>\r\n                </Grid>\r\n                \r\n                <Grid item container >\r\n                    <Grid item lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className = {classes.cursorPointer} onClick = {() => handleClick(id) } variant = \"h6\">{name}</Typography>\r\n                    </Grid>\r\n                    <Grid item container lg={12} md={12} sm={12} xs={12}  style = {{marginTop: \"15px\"}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                            {rating}\r\n                            <StarIcon style = {{color: \"#9d2b6b\"}} />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                            4 reviews\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container style = {{marginTop: \"15px\"}}>\r\n                    <Grid className = {classes.cursorPointer} item lg={4} md={4} sm={4} xs={4}>Salaries</Grid>\r\n                    <Grid className = {classes.cursorPointer} item lg={4} md={4} sm={4} xs={4}>Questions</Grid>\r\n                    <Grid className = {classes.cursorPointer} item lg={4} md={4} sm={4} xs={4}>Open Jobs</Grid>\r\n                </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx",["292"],"import { Box, Button, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { loadData, saveData } from '../../Utils/localStorage';\r\nimport {getSearchData} from \"../../Redux/Search/actions\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    recentSearchContainer:{\r\n        padding:'0 12vw',\r\n        marginTop:'40px'\r\n    },\r\n    recentSearchHeader:{\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'space-between'\r\n    },\r\n    recentSearchList:{\r\n        marginTop:'30px',\r\n        '& li':{\r\n            marginBottom:'40px',\r\n            fontSize:'16px',\r\n            display:'flex',\r\n            alignItems:'center',\r\n            justifyContent:'space-between',\r\n            letterSpacing:'0.1rem',\r\n            transition:'all 0.2s ease',\r\n        }\r\n    },\r\n    recentSearchText:{\r\n        '&:hover':{\r\n            cursor:'pointer',\r\n            textDecoration:'underline'\r\n        }\r\n    }\r\n  }))\r\nfunction RecentSearch(props) {\r\n    const classes = useStyles();\r\n    const [isEditClicked,setIsEditIsClicked] = useState(false);\r\n    const [recent, setRecent] = useState([])\r\n    const history = useHistory()\r\n    const dispatch = useDispatch() \r\n\r\n    useEffect(() => {\r\n        let data = loadData(\"recent\") || []\r\n        // console.log(data,\"recent\")\r\n        setRecent(data)\r\n    }, [])\r\n    \r\n    // console.log(recent)\r\n    const handleClearRecent=()=>{\r\n        saveData(\"recent\",[])\r\n        setRecent([])\r\n    }\r\n\r\n    const handleDeleteRecent=(key)=>{\r\n        let data = recent.filter((item,index)=>index !== key?item :null )\r\n        // console.log(data)\r\n        saveData(\"recent\",data)\r\n        setRecent(data)\r\n    }\r\n\r\n\r\n\r\n    const handleSearch=(e)=>{\r\n        let {innerHTML} = e.target\r\n        let job = \"\" , location=\"\"\r\n        let query = innerHTML\r\n        let name = e.target.getAttribute(\"name\")\r\n        if(name === \"both\")\r\n        {\r\n            query = query.split(\" - \")\r\n            job = query[0]\r\n            location = query[1]\r\n        }\r\n        else if(name === \"job\")\r\n        {\r\n            job = query\r\n        }        \r\n        else{\r\n            location = query\r\n        }\r\n        \r\n        dispatch(getSearchData(job,location))\r\n        \r\n        let data = loadData(\"recent\") || []\r\n        let str = job !== \"\" && location !== \"\" ? {category:\"both\" , query: `${job} - ${location}`} : job === \"\" && location !== \"\" ? {category:\"location\", query:`${location}`} : {category:\"job\",query:`${job}`}\r\n        \r\n        if(data.length === 4){\r\n            data.reverse()\r\n            if(data.some(item=>item.category===str.category && item.query === item.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                data.shift()\r\n                data.push(str)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            if(data.some(item=>item.category===str.category && item.query===str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                \r\n                data.push(str)\r\n            }\r\n        }\r\n\r\n        saveData(\"recent\",data.reverse())\r\n        history.push(`/jobs?q=${job}&location=${location}&page=1`)\r\n\r\n        // console.log(str,\"str\")\r\n\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.recentSearchContainer}>\r\n            <Box className={classes.recentSearchHeader}>\r\n                <Typography style={{fontSize:'20px'}} variant=\"h5\">\r\n                    Recent Searches\r\n                </Typography>\r\n                {\r\n                    isEditClicked && recent.length !==0 ? \r\n                    <Box>\r\n                        <Button variant='contained' style={{marginRight:'10px'}} onClick ={()=>handleClearRecent()}>\r\n                            Clear\r\n                        </Button >\r\n                        <Button variant='contained' onClick={()=>setIsEditIsClicked(false)}>\r\n                            Done\r\n                        </Button>\r\n                    </Box> :\r\n                    <Button className={classes.editBtn} onClick={()=>setIsEditIsClicked(true)}>\r\n                        Edit\r\n                    </Button>\r\n                }\r\n                \r\n            </Box>\r\n                <ul className={classes.recentSearchList}>\r\n                    {/* <li>\r\n                        <span className={classes.recentSearchText}>\r\n                            java developer - Mumbai, Maharashtra\r\n                        </span>\r\n                        {\r\n                            isEditClicked ?\r\n                            <Button style={{fontWeight:'bolder'}}>\r\n                                X\r\n                            </Button> :\r\n                            <></> \r\n                        }\r\n                        \r\n                    </li> */}\r\n                    {\r\n                        recent?.map((item,index)=>(\r\n                            // console.log(item,\"item\")\r\n                            <li key = {index}>\r\n                            <div name={item.category} className={classes.recentSearchText} onClick={e=>handleSearch(e)}>\r\n                                {/* java developer - Mumbai, Maharashtra */}\r\n                                {item.query}\r\n                            </div>\r\n                                <Button style={{fontWeight:'bolder'}} onClick={()=>handleDeleteRecent(index)}>\r\n                                    X\r\n                                </Button> \r\n                            </li>\r\n                        ))\r\n                    }\r\n\r\n                    \r\n                </ul>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RecentSearch;","D:\\project\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Section.jsx",["293","294","295","296","297"],"import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Link, DirectLink, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\n\r\nconst styles = {\r\n  fontFamily: 'sans-serif',\r\n  textAlign: 'center',\r\n};\r\n\r\nexport default class Section extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.scrollToTop = this.scrollToTop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    Events.scrollEvent.register('begin', function () {\r\n      console.log(\"begin\", arguments);\r\n    });\r\n\r\n    Events.scrollEvent.register('end', function () {\r\n      console.log(\"end\", arguments);\r\n    });\r\n\r\n  }\r\n  scrollToTop() {\r\n    scroll.scrollToTop();\r\n  }\r\n  scrollTo() {\r\n    scroller.scrollTo('scroll-to-element', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n  scrollToWithContainer() {\r\n\r\n    let goToContainer = new Promise((resolve, reject) => {\r\n\r\n      Events.scrollEvent.register('end', () => {\r\n        resolve();\r\n        Events.scrollEvent.remove('end');\r\n      });\r\n\r\n      scroller.scrollTo('scroll-container', {\r\n        duration: 800,\r\n        delay: 0,\r\n        smooth: 'easeInOutQuart'\r\n      });\r\n\r\n    });\r\n\r\n    goToContainer.then(() =>\r\n      scroller.scrollTo('scroll-container-second-element', {\r\n        duration: 800,\r\n        delay: 0,\r\n        smooth: 'easeInOutQuart',\r\n        containerId: 'scroll-container'\r\n      }));\r\n  }\r\n  componentWillUnmount() {\r\n    Events.scrollEvent.remove('begin');\r\n    Events.scrollEvent.remove('end');\r\n  }\r\n  render() {\r\n    const {jobDescription,summary} = this.props\r\n    return (\r\n      <div>\r\n          \r\n\r\n          <Element name=\"test7\" className=\"element\" id=\"containerElement\" style={{\r\n            position: 'relative',\r\n            height: '500px',\r\n            overflow: 'scroll',\r\n            \r\n          }}>\r\n\r\n            <Element name=\"firstInsideContainer\" style={{\r\n              \r\n              }}>\r\n                <div>\r\n                  {summary}\r\n                </div>\r\n                <div className='section'  dangerouslySetInnerHTML={{__html: jobDescription}}>\r\n\r\n                </div>\r\n            </Element>\r\n\r\n           \r\n          </Element>\r\n\r\n\r\n\r\n\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n",{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":12},{"ruleId":"302","severity":1,"message":"306","line":12,"column":10,"nodeType":"304","messageId":"305","endLine":12,"endColumn":22},{"ruleId":"302","severity":1,"message":"307","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":18},{"ruleId":"302","severity":1,"message":"308","line":62,"column":23,"nodeType":"304","messageId":"305","endLine":62,"endColumn":36},{"ruleId":"302","severity":1,"message":"309","line":63,"column":28,"nodeType":"304","messageId":"305","endLine":63,"endColumn":46},{"ruleId":"310","severity":1,"message":"311","line":77,"column":64,"nodeType":"312","messageId":"313","endLine":77,"endColumn":89},{"ruleId":"302","severity":1,"message":"314","line":12,"column":7,"nodeType":"304","messageId":"305","endLine":12,"endColumn":19},{"ruleId":"302","severity":1,"message":"315","line":24,"column":8,"nodeType":"304","messageId":"305","endLine":24,"endColumn":19},{"ruleId":"302","severity":1,"message":"316","line":79,"column":40,"nodeType":"304","messageId":"305","endLine":79,"endColumn":47},{"ruleId":"302","severity":1,"message":"317","line":79,"column":48,"nodeType":"304","messageId":"305","endLine":79,"endColumn":56},{"ruleId":"302","severity":1,"message":"318","line":1,"column":34,"nodeType":"304","messageId":"305","endLine":1,"endColumn":38},{"ruleId":"302","severity":1,"message":"319","line":5,"column":10,"nodeType":"304","messageId":"305","endLine":5,"endColumn":28},{"ruleId":"302","severity":1,"message":"320","line":7,"column":9,"nodeType":"304","messageId":"305","endLine":7,"endColumn":19},{"ruleId":"302","severity":1,"message":"321","line":46,"column":12,"nodeType":"304","messageId":"305","endLine":46,"endColumn":19},{"ruleId":"302","severity":1,"message":"322","line":51,"column":12,"nodeType":"304","messageId":"305","endLine":51,"endColumn":17},{"ruleId":"302","severity":1,"message":"323","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":13},{"ruleId":"302","severity":1,"message":"321","line":44,"column":12,"nodeType":"304","messageId":"305","endLine":44,"endColumn":19},{"ruleId":"302","severity":1,"message":"324","line":44,"column":21,"nodeType":"304","messageId":"305","endLine":44,"endColumn":32},{"ruleId":"302","severity":1,"message":"325","line":115,"column":12,"nodeType":"304","messageId":"305","endLine":115,"endColumn":19},{"ruleId":"326","severity":1,"message":"327","line":198,"column":67,"nodeType":"328","endLine":198,"endColumn":133},{"ruleId":"326","severity":1,"message":"327","line":198,"column":155,"nodeType":"328","endLine":198,"endColumn":221},{"ruleId":"326","severity":1,"message":"327","line":199,"column":25,"nodeType":"328","endLine":199,"endColumn":91},{"ruleId":"302","severity":1,"message":"318","line":1,"column":34,"nodeType":"304","messageId":"305","endLine":1,"endColumn":38},{"ruleId":"302","severity":1,"message":"321","line":42,"column":12,"nodeType":"304","messageId":"305","endLine":42,"endColumn":19},{"ruleId":"302","severity":1,"message":"329","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":17},{"ruleId":"302","severity":1,"message":"330","line":9,"column":8,"nodeType":"304","messageId":"305","endLine":9,"endColumn":18},{"ruleId":"302","severity":1,"message":"331","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":16},{"ruleId":"302","severity":1,"message":"323","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":13},{"ruleId":"302","severity":1,"message":"332","line":11,"column":39,"nodeType":"304","messageId":"305","endLine":11,"endColumn":47},{"ruleId":"302","severity":1,"message":"321","line":151,"column":12,"nodeType":"304","messageId":"305","endLine":151,"endColumn":19},{"ruleId":"302","severity":1,"message":"316","line":167,"column":10,"nodeType":"304","messageId":"305","endLine":167,"endColumn":17},{"ruleId":"302","severity":1,"message":"333","line":167,"column":18,"nodeType":"304","messageId":"305","endLine":167,"endColumn":28},{"ruleId":"302","severity":1,"message":"317","line":168,"column":10,"nodeType":"304","messageId":"305","endLine":168,"endColumn":18},{"ruleId":"302","severity":1,"message":"334","line":168,"column":19,"nodeType":"304","messageId":"305","endLine":168,"endColumn":30},{"ruleId":"302","severity":1,"message":"335","line":171,"column":10,"nodeType":"304","messageId":"305","endLine":171,"endColumn":16},{"ruleId":"302","severity":1,"message":"336","line":171,"column":19,"nodeType":"304","messageId":"305","endLine":171,"endColumn":28},{"ruleId":"337","severity":1,"message":"338","line":233,"column":7,"nodeType":"339","endLine":233,"endColumn":26,"suggestions":"340"},{"ruleId":"302","severity":1,"message":"341","line":10,"column":10,"nodeType":"304","messageId":"305","endLine":10,"endColumn":13},{"ruleId":"302","severity":1,"message":"342","line":15,"column":5,"nodeType":"304","messageId":"305","endLine":15,"endColumn":18},{"ruleId":"337","severity":1,"message":"343","line":63,"column":7,"nodeType":"339","endLine":63,"endColumn":9,"suggestions":"344"},{"ruleId":"302","severity":1,"message":"345","line":4,"column":7,"nodeType":"304","messageId":"305","endLine":4,"endColumn":22},{"ruleId":"302","severity":1,"message":"346","line":26,"column":9,"nodeType":"304","messageId":"305","endLine":26,"endColumn":16},{"ruleId":"302","severity":1,"message":"347","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"329","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":17},{"ruleId":"302","severity":1,"message":"330","line":9,"column":8,"nodeType":"304","messageId":"305","endLine":9,"endColumn":18},{"ruleId":"302","severity":1,"message":"331","line":10,"column":8,"nodeType":"304","messageId":"305","endLine":10,"endColumn":16},{"ruleId":"302","severity":1,"message":"348","line":11,"column":8,"nodeType":"304","messageId":"305","endLine":11,"endColumn":22},{"ruleId":"302","severity":1,"message":"307","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":18},{"ruleId":"302","severity":1,"message":"349","line":13,"column":22,"nodeType":"304","messageId":"305","endLine":13,"endColumn":26},{"ruleId":"302","severity":1,"message":"350","line":13,"column":28,"nodeType":"304","messageId":"305","endLine":13,"endColumn":36},{"ruleId":"302","severity":1,"message":"351","line":13,"column":38,"nodeType":"304","messageId":"305","endLine":13,"endColumn":48},{"ruleId":"302","severity":1,"message":"352","line":14,"column":8,"nodeType":"304","messageId":"305","endLine":14,"endColumn":28},{"ruleId":"302","severity":1,"message":"353","line":15,"column":10,"nodeType":"304","messageId":"305","endLine":15,"endColumn":20},{"ruleId":"302","severity":1,"message":"354","line":17,"column":8,"nodeType":"304","messageId":"305","endLine":17,"endColumn":25},{"ruleId":"302","severity":1,"message":"355","line":44,"column":7,"nodeType":"304","messageId":"305","endLine":44,"endColumn":21},{"ruleId":"302","severity":1,"message":"356","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"357","line":42,"column":33,"nodeType":"304","messageId":"305","endLine":42,"endColumn":43},{"ruleId":"302","severity":1,"message":"321","line":46,"column":12,"nodeType":"304","messageId":"305","endLine":46,"endColumn":19},{"ruleId":"302","severity":1,"message":"341","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":91,"column":64,"nodeType":"312","messageId":"313","endLine":91,"endColumn":89},{"ruleId":"302","severity":1,"message":"358","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":16},{"ruleId":"302","severity":1,"message":"356","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":14},{"ruleId":"302","severity":1,"message":"359","line":3,"column":16,"nodeType":"304","messageId":"305","endLine":3,"endColumn":26},{"ruleId":"302","severity":1,"message":"360","line":3,"column":70,"nodeType":"304","messageId":"305","endLine":3,"endColumn":79},{"ruleId":"302","severity":1,"message":"361","line":5,"column":7,"nodeType":"304","messageId":"305","endLine":5,"endColumn":13},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'SearchResult' is defined but never used.","'PersonIcon' is defined but never used.","'setJobOptions' is assigned a value but never used.","'setLocationOptions' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'fetchloading' is assigned a value but never used.","'putJobsById' is assigned a value but never used.","'fromage' is assigned a value but never used.","'sortType' is assigned a value but never used.","'Grid' is defined but never used.","'makeSaveJobRequest' is defined but never used.","'ApplyModal' is defined but never used.","'ignored' is assigned a value but never used.","'jobId' is assigned a value but never used.","'axios' is defined but never used.","'forceUpdate' is assigned a value but never used.","'success' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'setCount' is defined but never used.","'setFromage' is assigned a value but never used.","'setSortType' is assigned a value but never used.","'salary' is assigned a value but never used.","'setSalary' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["364"],"'Box' is defined but never used.","'OutlinedInput' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["365"],"'applyJobRequest' is assigned a value but never used.","'payload' is assigned a value but never used.","'useState' is defined but never used.","'RateReviewIcon' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Typography' is defined but never used.","'PowerSettingsNewIcon' is defined but never used.","'useHistory' is defined but never used.","'NotInterestedIcon' is defined but never used.","'StyledMenuItem' is assigned a value but never used.","'Link' is defined but never used.","'companyUrl' is assigned a value but never used.","'render' is defined but never used.","'DirectLink' is defined but never used.","'scrollSpy' is defined but never used.","'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [dispatch, job, location, page]",{"range":"370","text":"371"},"Update the dependencies array to be: [dispatch, id]",{"range":"372","text":"373"},[6465,6484],"[dispatch, job, location, page]",[1894,1896],"[dispatch, id]"]