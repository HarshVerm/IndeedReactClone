[{"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\index.js":"1","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\App.js":"2","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Utils\\theme.js":"4","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx":"5","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"6","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"7","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx":"8","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"9","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"10","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"11","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx":"12","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx":"13","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"14"},{"size":557,"mtime":1609323682978,"results":"15","hashOfConfig":"16"},{"size":510,"mtime":1609323682962,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1609323682978,"results":"18","hashOfConfig":"16"},{"size":568,"mtime":1609323682978,"results":"19","hashOfConfig":"16"},{"size":734,"mtime":1609323682978,"results":"20","hashOfConfig":"16"},{"size":2901,"mtime":1609335383073,"results":"21","hashOfConfig":"16"},{"size":3795,"mtime":1609323682962,"results":"22","hashOfConfig":"16"},{"size":1086,"mtime":1609323682962,"results":"23","hashOfConfig":"16"},{"size":7334,"mtime":1609340986237,"results":"24","hashOfConfig":"16"},{"size":2770,"mtime":1609323682962,"results":"25","hashOfConfig":"16"},{"size":759,"mtime":1609323682962,"results":"26","hashOfConfig":"16"},{"size":2589,"mtime":1609323682962,"results":"27","hashOfConfig":"16"},{"size":2038,"mtime":1609331844038,"results":"28","hashOfConfig":"16"},{"size":1398,"mtime":1609338508365,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"zrj23b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\index.js",[],["66","67"],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\App.js",["68","69"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Header from './Components/Layout/Header/Header';\r\nimport Home from './Components/Layout/Forms/SearchForm/SearchForm';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './Utils/theme';\r\nimport Routes from './Routes/Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Routes />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Utils\\theme.js",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["70","71","72","73","74","75","76"],"import {  Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useState , useRef, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from './Input';\r\nimport InputGrid from './InputGrid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n   \r\n    input:{\r\n        width:'100%',\r\n        height:'45px',\r\n        \r\n    },\r\n    removeMargin:{\r\n        margin:'0'\r\n    },\r\n    searchForm:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    btn_Container:{\r\n        display:'flex',\r\n        alignItems:'flex-end',\r\n        \r\n        '& button':{\r\n            width:'100%',\r\n            height:\"45px\",\r\n            fontSize:'13px',\r\n            fontWeight:'bold',\r\n            borderRadius:'10px'\r\n        }\r\n    },\r\n    suggestionInput:{\r\n        position:'relative'\r\n    },\r\n    autocontainer:{\r\n        border:`1px solid ${theme.palette.primary.main}`,\r\n        width:'99%',\r\n        backgroundColor:\"white\",\r\n        borderBottomLeftRadius:'5px',\r\n        borderBottomRightRadius:'5px',\r\n        zIndex:'10',\r\n        paddingBottom:'30px',\r\n        position:'absolute',\r\n        '& div':{\r\n            marginTop:'30px'\r\n        },\r\n        \r\n    },\r\n  }))\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const classes = useStyles();\r\n    const [job,setJob] = useState('')\r\n    const [location,setLocation] = useState('');\r\n    const [jobOptions,setJobOptions] = useState(['Java Developer','Javascript Developer','React Developer','Government','Account']);\r\n    const [locationOptions,setLocationOptions] = useState(['Bangalore','Mumbai','Delhi','Kolkata','Chennai']);\r\n    const history = useHistory()\r\n    const handelSubmit = (e)=>{\r\n        e.preventDefault();\r\n        history.push(`/jobs/q=${job}&l=${location}`)\r\n    }\r\n    return (\r\n            <form  onSubmit={handelSubmit} className={classes.searchForm}>\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'City, state, or pin code'} classes={classes}\r\n                    options={jobOptions}\r\n                    />\r\n\r\n                    <InputGrid setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes={classes}\r\n                    options={locationOptions} />\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className={classes.btn_Container}>\r\n                        <Button color={'primary'} variant='contained' type='submit'>\r\n                            Find Jobs\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n       \r\n        \r\n    );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",["77"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor:'#fff',\r\n  },\r\n  toolbar: {\r\n    minHeight: '45px',\r\n    display:'flex',\r\n    alignItems: 'center',\r\n    justifyContent:'space-between'\r\n  },\r\n  logo:{\r\n    height:'20px'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    alignSelf: 'flex-end',\r\n  },\r\n  navigation:{\r\n      width:'350px',\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      marginLeft:'30px'\r\n  },\r\n  header_container:{\r\n      display:'flex',\r\n      alignItems:'center',\r\n      justifyContent:'space-between'\r\n  },\r\n  header_left:{\r\n    display:'flex',\r\n  },\r\n  header_right:{\r\n    display:'flex',\r\n    width:'250px',\r\n    justifyContent:'space-between'\r\n  },\r\n  link:{\r\n        marginLeft:'14px',\r\n        '& a':{\r\n            marginLeft:'20px'\r\n        }\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar elevation={0} color={'secondary'} position=\"static\">\r\n        <Toolbar className={classes.toolbar} >\r\n            <Container className={classes.header_container} disableGutters maxWidth={false}>\r\n                <Box className={classes.header_left}>\r\n                    <img className={classes.logo} src=\"/Images/logo.svg\" alt=\"\"/>\r\n                    <Box className={classes.link} display={{ xs: 'none', sm: 'block', md: 'block' }}>\r\n                        <Typography component={NavLink} variant='h6' to='/' >\r\n                            Find Jobs\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/companies' >\r\n                            Company Reviews\r\n                        </Typography>\r\n                        <Typography component={NavLink} variant='h6' to='/carrer/salary' >\r\n                            Find Salary\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Box className={classes.header_right} >\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        \r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                        <ForumIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                            <NotificationsIcon />\r\n                        </IconButton>\r\n\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        >\r\n                            <PersonIcon />\r\n                        </IconButton>\r\n\r\n                        <Typography style={{display:'flex',alignItems:'center'}} component={NavLink} variant='h6' to='/' >\r\n                            Employers/jobs\r\n                        </Typography>\r\n                    \r\n                </Box>\r\n            </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["78","79"],"import { Box, Container, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport SearchForm from '../Layout/Forms/SearchForm/SearchForm';\r\nimport axios from 'axios'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport classNames from 'classnames'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FillterButton from '../Layout/FilterJobsButton/FillterButton';\r\nimport JobDescription from '../Layout/JobDescription';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    jobContainer:{\r\n        width:'450px',\r\n    },\r\n    card:{\r\n        border:'1px solid black',\r\n        padding:'15px',\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            '& $job_title':{\r\n                textDecoration:'underline'\r\n            }\r\n        },\r\n        borderRadius:'10px',\r\n        marginBottom:'20px'\r\n    },\r\n    job_title:{\r\n        fontWeight:'bold',\r\n        fontSize:'20px'\r\n    },\r\n    job_subTitle:{\r\n        fontSize:'16px'\r\n    },\r\n    job_snippet:{\r\n        margin:'20px 0px 10px 0px',\r\n        fontSize:'15px',\r\n        lineHeight:'1.4rem'\r\n    },\r\n    greyText:{\r\n        fontSize:'14px',\r\n        color:'grey'\r\n    },\r\n    job_section:{\r\n        padding:'0 8vw',\r\n        position:'relative'\r\n    },\r\n    sort_container:{\r\n                    display:'flex',\r\n                    justifyContent:\"space-between\",\r\n                    width:\"450px\",\r\n                    fontSize:'14px',\r\n                    margin:'10px 0px'\r\n    },\r\n    sortStyle:{\r\n        color:theme.palette.primary.main,\r\n        cursor:'pointer',\r\n        '&:hover':{\r\n            textDecoration:'underline'\r\n        }\r\n    },\r\n    bold:{\r\n        fontWeight:'bolder',\r\n        cursor:'pointer',\r\n    }\r\n}))\r\n\r\nfunction DisplayJobs(props) {\r\n    \r\n    const query = new URLSearchParams(props.location.pathname.split('/')[2]);\r\n    const classes = useStyles()\r\n    let job = query.get('q')\r\n    let location = query.get('l')\r\n    let start = query.get('start')\r\n    \r\n    let [page,setPage] = useState(1)\r\n    let [jobType,setJobType] = useState('') \r\n    let [fromage,setFromage] = useState(0)\r\n    let [sortType,setSortType] = useState('relevance')\r\n\r\n    let [sortDateIsCliked,setSortDateIsCliked] = useState(false)\r\n\r\n    let [jobs,setJobs] = useState([])\r\n\r\n    let [jobData,setJobData] = useState(null)\r\n    let [totalResults,setTotalResults] = useState(0);\r\n    const history = useHistory()\r\n    \r\n    useEffect(()=>{\r\n\r\n    },[page])\r\n    \r\n    const handlePageChange = (event, page) => {\r\n        setPage(page)\r\n        // history.push(`/jobs/q=${job}&l=${location}&start=${(page-1)*15}&jt=${jobType}`)\r\n    };\r\n\r\n\r\n    const handleSort = (sort)=>{\r\n        setSortDateIsCliked(!sortDateIsCliked)\r\n        setSortType(sort)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        axios\r\n        .get(`https://cors-anywhere.herokuapp.com/https://api.indeed.com/ads/apisearch`,\r\n        {\r\n            params:{\r\n                publisher:'7778623931867371',\r\n                q:job,\r\n                l:location,\r\n                co:'in',\r\n                limit:15,\r\n                start:(page-1)*15,\r\n                jt:jobType,\r\n                v:2,\r\n                fromage:fromage,\r\n                format:'json',\r\n                sort:sortType\r\n                }\r\n        })\r\n        .then(\r\n            res=>{\r\n                setTotalResults(res.data.totalResults)\r\n                setJobs(res.data.results)\r\n            }\r\n            )\r\n\r\n        // history.push(`/jobs/q=${job}&l=${location}&start=${(page-1)*15}&jt=${jobType}&sort=${sortType}`)\r\n    },[job,location,page,jobType,fromage,sortType])\r\n\r\n    const getJobDescription = (jobKey)=>{\r\n        \r\n        axios\r\n        .get(`https://cors-anywhere.herokuapp.com/https://api.indeed.com/ads/apigetjobs?publisher=7778623931867371&jobkeys=${jobKey}&v=2&format=json`)\r\n        .then(\r\n            res=>{\r\n                setJobData(res.data.results[0])\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Container className={classes.job_section}>\r\n            <Box style={{transform:\"scale(0.8) translateX(-12%)\"}}>\r\n                <SearchForm />\r\n            </Box>\r\n            <Box>\r\n                <FillterButton type={jobType} setType={setJobType} \r\n                typeArr={['Fulltime','Walk-In','Fresher','Part-time']}\r\n                formatDate={false}\r\n                typeStr='JOB TYPE'/>\r\n\r\n                <FillterButton type={fromage} setType={setFromage} \r\n                typeArr={[1,3,7,14]}\r\n                formatDate={true}\r\n                typeStr='DATE POSTED'/>\r\n            \r\n            </Box>\r\n            <Box className={classes.greyText}>\r\n                jobs in {location}\r\n            </Box>\r\n            <Box className={classes.sort_container}>\r\n                <Box>\r\n                    Sort by \r\n                    <span className={classNames({[classes.sortStyle] : sortDateIsCliked , [classes.bold] : !sortDateIsCliked})} onClick={()=>handleSort('relevance')}> relevance </span> \r\n                    / \r\n                    <span className={classNames({[classes.sortStyle] : !sortDateIsCliked , [classes.bold] : sortDateIsCliked})} onClick={()=>handleSort('date')}> date </span>\r\n                </Box>\r\n                <Box>\r\n                    {\r\n                        `Page ${Math.floor(start/15) + 1} of ${totalResults} results`\r\n                    }\r\n                </Box>\r\n              \r\n            </Box>\r\n           \r\n                <Box style={{display:'flex'}}> \r\n                    <Grid className={classes.jobContainer}  container>\r\n                        {\r\n                            jobs.map((job,index)=>\r\n                            <Grid onClick={()=>getJobDescription(job.jobkey)} className={classes.card}  item key={job.jobkey} lg={12} md={12} sm={12} xs={12} >\r\n                                <Typography  className={classes.job_title}>\r\n                                    {job.jobtitle}\r\n                                </Typography>\r\n                                <Typography className={classes.job_subTitle}>\r\n                                    {job.company}\r\n                                </Typography>\r\n                                <Typography className={classes.job_subTitle}>\r\n                                    {job.city}\r\n                                </Typography>\r\n                                <div className={classes.job_snippet} dangerouslySetInnerHTML={{__html: job.snippet}}></div>\r\n                                <Typography className={classes.greyText}>\r\n                                    {job.formattedRelativeTime}\r\n                                </Typography>\r\n                            </Grid>)\r\n                        }\r\n                    </Grid>\r\n                    {\r\n                        jobData ? <JobDescription jobData={jobData} /> : <></> \r\n                    }\r\n                    \r\n                </Box>\r\n                <Pagination onChange={handlePageChange} count={\r\n                    totalResults % 15 === 0 ?\r\n                    Math.floor(totalResults/15) : Math.floor(totalResults/15) + 1 } variant=\"outlined\" shape=\"rounded\" />\r\n                \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DisplayJobs;","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",["80","81","82","83","84"],"import {  Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useState , useRef, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from './Input';\r\n\r\n\r\nfunction InputGrid({label,helperText,classes,setValue,value,options}) {\r\n    return (\r\n        <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Typography variant='h5'>\r\n                {label}\r\n            </Typography>\r\n            <FormHelperText className={classes.removeMargin}>{helperText}</FormHelperText>\r\n            <Input setValue={setValue} value={value} classes={classes} options={options} />            \r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputGrid;","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx",[],"C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx",["85"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    menu:{\r\n        fontSize:'12px',\r\n        margin:'20px 20px 60px 0px',\r\n        borderRadius:'10px',\r\n        outline:'none',\r\n        border:'1px solid #D4D2D0',\r\n        backgroundColor:'#D4D2D0',\r\n        padding:'10px',\r\n        fontWeight:'bold'\r\n    }\r\n}))\r\n\r\nfunction FillterButton({setType,type,typeStr,typeArr,formatDate}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n      \r\n    };\r\n  \r\n    const handleClose = (type) => {\r\n        setAnchorEl(null);\r\n        if(typeof type === 'string' || typeof type === 'number' )\r\n            setType(type)\r\n    };\r\n    return (\r\n        <>\r\n                <button  className={classes.menu}  onClick={handleClick}>\r\n                    {\r\n                        !type ? typeStr : formatDate ? `Last ${type === 1 ? '24 hours' : `${type} days` }` : type \r\n                        \r\n                    }\r\n                </button>\r\n\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    {\r\n                        typeArr.map( (type,index) => <MenuItem key={index} onClick={()=>handleClose(type)}>\r\n                            \r\n                            {formatDate ? `Last ${type === 1 ? '24 hours' : `${type} days` }` : type }\r\n                            \r\n                            </MenuItem>\r\n                            \r\n                         )\r\n                    }\r\n                \r\n                </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FillterButton;","C:\\Users\\MAHEN\\Desktop\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx",["86","87"],"import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst useStyles = makeStyles(theme=>({\r\n    container:{\r\n        position:'sticky',\r\n        top:'20px',\r\n        marginLeft:'50px',\r\n        alignSelf: 'flex-start',\r\n        border:'1px solid black',\r\n        padding:'20px',\r\n        flex:'1',\r\n        borderRadius:'10px '\r\n    },\r\n    link:{\r\n        width:'100%',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        height:'53px',\r\n        padding:'0 25px',\r\n        fontSize:'16px',\r\n        borderRadius:'2px',\r\n        backgroundColor:theme.palette.primary.main\r\n    }\r\n})) \r\nfunction JobDescription({jobData}) {\r\n    const classes = useStyles()\r\n    const {company,city,url,snippet,jobTitle} = jobData\r\n    console.log(url)\r\n    return (\r\n        <Box className={classes.container}>\r\n            <Box>\r\n                {jobTitle}\r\n            </Box>\r\n            <Box>\r\n                {company}\r\n            </Box>\r\n            <Box>\r\n                {city}\r\n            </Box>\r\n            <Box>\r\n                ₹ 50,000 - 75,000\r\n            </Box>\r\n            <a className={classes.link} href={url}>\r\n                Apply on Company site\r\n            </a>\r\n            <Box>\r\n                {snippet}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default JobDescription;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"92","severity":1,"message":"96","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":12},{"ruleId":"92","severity":1,"message":"97","line":1,"column":25,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"98","line":2,"column":28,"nodeType":"94","messageId":"95","endLine":2,"endColumn":34},{"ruleId":"92","severity":1,"message":"99","line":2,"column":36,"nodeType":"94","messageId":"95","endLine":2,"endColumn":45},{"ruleId":"92","severity":1,"message":"100","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":22},{"ruleId":"92","severity":1,"message":"101","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"102","line":60,"column":23,"nodeType":"94","messageId":"95","endLine":60,"endColumn":36},{"ruleId":"92","severity":1,"message":"103","line":61,"column":28,"nodeType":"94","messageId":"95","endLine":61,"endColumn":46},{"ruleId":"92","severity":1,"message":"104","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":14},{"ruleId":"92","severity":1,"message":"105","line":3,"column":22,"nodeType":"94","messageId":"95","endLine":3,"endColumn":31},{"ruleId":"92","severity":1,"message":"106","line":88,"column":11,"nodeType":"94","messageId":"95","endLine":88,"endColumn":18},{"ruleId":"92","severity":1,"message":"107","line":1,"column":11,"nodeType":"94","messageId":"95","endLine":1,"endColumn":17},{"ruleId":"92","severity":1,"message":"108","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"92","severity":1,"message":"98","line":2,"column":28,"nodeType":"94","messageId":"95","endLine":2,"endColumn":34},{"ruleId":"92","severity":1,"message":"99","line":2,"column":36,"nodeType":"94","messageId":"95","endLine":2,"endColumn":45},{"ruleId":"92","severity":1,"message":"109","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":20},{"ruleId":"92","severity":1,"message":"107","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"107","line":1,"column":15,"nodeType":"94","messageId":"95","endLine":1,"endColumn":21},{"ruleId":"92","severity":1,"message":"110","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":18},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Typography' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'setJobOptions' is assigned a value but never used.","'setLocationOptions' is assigned a value but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]